<?xml version='1.0' encoding='utf-8'?>
<device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.1" xsi:noNamespaceSchemaLocation="svd_schema.xsd">
 <vendor>Maxim-Integrated</vendor>
 <vendorID>Maxim</vendorID>
 <name>MAX32650</name>
 <series>ARMCM4</series>
 <version>1.0</version>
 <description>MAX32650.</description>
 <cpu>
  <name>CM4</name>
  <revision>r2p1</revision>
  <endian>little</endian>
  <mpuPresent>true</mpuPresent>
  <fpuPresent>true</fpuPresent>
  <nvicPrioBits>3</nvicPrioBits>
  <vendorSystickConfig>false</vendorSystickConfig>
 </cpu>
 <addressUnitBits>8</addressUnitBits>
 <width>32</width>
 <size>0x20</size>
 <access>read-write</access>
 <resetValue>0x00000000</resetValue>
 <resetMask>0xFFFFFFFF</resetMask>
 <peripherals>
  <peripheral>
   <name>ADC</name>
   <description>10-bit Analog to Digital Converter</description>
   <baseAddress>0x40034000</baseAddress>
   <size>32</size>
   <access>read-write</access>
   <addressBlock>
    <offset>0</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>ADC</name>
    <description>ADC IRQ</description>
    <value>20</value>
   </interrupt>
   <registers>
    <register>
     <name>CTRL</name>
     <description>ADC Control</description>
     <addressOffset>0x0000</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>start</name>
       <description>Start ADC Conversion</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>active</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>pwr</name>
       <description>ADC Power Up</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>adc_off</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>adc_on</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>refbuf_pwr</name>
       <description>ADC Reference Buffer Power Up</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>refbuf_off</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>refbuf_on</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ref_sel</name>
       <description>ADC Reference Select</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>bandgap</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>vdd_div2</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ref_scale</name>
       <description>ADC Reference Scale</description>
       <bitRange>[8:8]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>div1</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>input_scale</name>
       <description>ADC Scale</description>
       <bitRange>[9:9]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>div1</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>clk_en</name>
       <description>ADC Clock Enable</description>
       <bitRange>[11:11]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ch_sel</name>
       <description>ADC Channel Select</description>
       <bitRange>[15:12]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>ain0</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain1</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain2</name>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain3</name>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain0_div5</name>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain1_div5</name>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>vddb_div4</name>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>vdda</name>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>vcore</name>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>vrtc_div2</name>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>rsv_0xa</name>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>vddio_div4</name>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>vddioh_div4</name>
         <value>12</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>data_align</name>
       <description>ADC Data Alignment Select</description>
       <bitRange>[17:17]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>lsb_justified</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>msb_justified</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>STATUS</name>
     <description>ADC Status</description>
     <addressOffset>0x0004</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>active</name>
       <description>ADC Conversion In Progress</description>
       <bitRange>[0:0]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>active</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>pwr_up_active</name>
       <description>AFE Power Up Delay Active</description>
       <bitRange>[2:2]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>no_delay</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>delay_active</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>overflow</name>
       <description>ADC Overflow</description>
       <bitRange>[3:3]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>underflow</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>overflow</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>DATA</name>
     <description>ADC Output Data</description>
     <addressOffset>0x0008</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>data</name>
       <description>ADC Converted Sample Data Output</description>
       <bitRange>[15:0]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTR</name>
     <description>ADC Interrupt Control Register</description>
     <addressOffset>0x000C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>done_ie</name>
       <description>ADC Done Interrupt Enable</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ref_ready_ie</name>
       <description>ADC Reference Ready Interrupt Enable</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>hi_limit_ie</name>
       <description>ADC Hi Limit Monitor Interrupt Enable</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>lo_limit_ie</name>
       <description>ADC Lo Limit Monitor Interrupt Enable</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>overflow_ie</name>
       <description>ADC Overflow Interrupt Enable</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>done_if</name>
       <description>ADC Done Interrupt Flag</description>
       <bitRange>[16:16]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>active</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ref_ready_if</name>
       <description>ADC Reference Ready Interrupt Flag</description>
       <bitRange>[17:17]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>active</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>hi_limit_if</name>
       <description>ADC Hi Limit Monitor Interrupt Flag</description>
       <bitRange>[18:18]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>active</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>lo_limit_if</name>
       <description>ADC Lo Limit Monitor Interrupt Flag</description>
       <bitRange>[19:19]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>active</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>overflow_if</name>
       <description>ADC Overflow Interrupt Flag</description>
       <bitRange>[20:20]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>active</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>pending</name>
       <description>ADC Interrupt Pending Status</description>
       <bitRange>[22:22]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>no_int</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>int_pending</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>LIMIT[%s]</name>
     <description>ADC Limit</description>
     <addressOffset>0x0010</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>ch_lo_limit</name>
       <description>Low Limit Threshold</description>
       <bitRange>[9:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>ch_hi_limit</name>
       <description>High Limit Threshold</description>
       <bitRange>[21:12]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>ch_sel</name>
       <description>ADC Channel Select</description>
       <bitRange>[27:24]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>ain0</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain1</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain2</name>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain3</name>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain4</name>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain5</name>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain6</name>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain7</name>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain8</name>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain9</name>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain10</name>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain11</name>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ain12</name>
         <value>12</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ch_lo_limit_en</name>
       <description>Low Limit Monitoring Enable</description>
       <bitRange>[28:28]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ch_hi_limit_en</name>
       <description>High Limit Monitoring Enable</description>
       <bitRange>[29:29]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--ADC 10-bit Analog to Digital Converter-->
  <peripheral>
   <name>AES_KEY</name>
   <description>AES Key Registers.</description>
   <baseAddress>0x40005000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>KEY0</name>
     <description>AES Key 0.</description>
     <addressOffset>0x00</addressOffset>
     <size>32</size>
    </register>
    <register>
     <name>KEY1</name>
     <description>AES Key 1.</description>
     <addressOffset>0x80</addressOffset>
     <size>32</size>
    </register>
    <register>
     <name>KEY2</name>
     <description>AES Key 2.</description>
     <addressOffset>0x100</addressOffset>
     <size>32</size>
    </register>
    <register>
     <name>KEY3</name>
     <description>AES Key 3.</description>
     <addressOffset>0x180</addressOffset>
     <size>32</size>
    </register>
   </registers>
  </peripheral>
<!--AES_KEY AES Key Registers.-->
  <peripheral>
   <name>DMA</name>
   <description>DMA Controller Fully programmable, chaining capable DMA channels.</description>
   <baseAddress>0x40028000</baseAddress>
   <size>32</size>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>DMA0</name>
    <value>28</value>
   </interrupt>
   <interrupt>
    <name>DMA1</name>
    <value>29</value>
   </interrupt>
   <interrupt>
    <name>DMA2</name>
    <value>30</value>
   </interrupt>
   <interrupt>
    <name>DMA3</name>
    <value>31</value>
   </interrupt>
   <interrupt>
    <name>DMA4</name>
    <value>68</value>
   </interrupt>
   <interrupt>
    <name>DMA5</name>
    <value>69</value>
   </interrupt>
   <interrupt>
    <name>DMA6</name>
    <value>70</value>
   </interrupt>
   <interrupt>
    <name>DMA7</name>
    <value>71</value>
   </interrupt>
   <interrupt>
    <name>DMA8</name>
    <value>72</value>
   </interrupt>
   <interrupt>
    <name>DMA9</name>
    <value>73</value>
   </interrupt>
   <interrupt>
    <name>DMA10</name>
    <value>74</value>
   </interrupt>
   <interrupt>
    <name>DMA11</name>
    <value>75</value>
   </interrupt>
   <interrupt>
    <name>DMA12</name>
    <value>76</value>
   </interrupt>
   <interrupt>
    <name>DMA13</name>
    <value>77</value>
   </interrupt>
   <interrupt>
    <name>DMA14</name>
    <value>78</value>
   </interrupt>
   <interrupt>
    <name>DMA15</name>
    <value>79</value>
   </interrupt>
   <registers>
    <register>
     <name>CN</name>
     <description>DMA Control Register.</description>
     <addressOffset>0x000</addressOffset>
     <fields>
      <field>
       <name>CH0_IEN</name>
       <description>Channel 0 Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH1_IEN</name>
       <description>Channel 1 Interrupt Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH2_IEN</name>
       <description>Channel 2 Interrupt Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH3_IEN</name>
       <description>Channel 3 Interrupt Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH4_IEN</name>
       <description>Channel 4 Interrupt Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH5_IEN</name>
       <description>Channel 5 Interrupt Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH6_IEN</name>
       <description>Channel 6 Interrupt Enable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH7_IEN</name>
       <description>Channel 7 Interrupt Enable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH8_IEN</name>
       <description>Channel 8 Interrupt Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH9_IEN</name>
       <description>Channel 9 Interrupt Enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH10_IEN</name>
       <description>Channel 10 Interrupt Enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH11_IEN</name>
       <description>Channel 11 Interrupt Enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH12_IEN</name>
       <description>Channel 12 Interrupt Enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH13_IEN</name>
       <description>Channel 13 Interrupt Enable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH14_IEN</name>
       <description>Channel 14 Interrupt Enable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH15_IEN</name>
       <description>Channel 15 Interrupt Enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTR</name>
     <description>DMA Interrupt Register.</description>
     <addressOffset>0x004</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>CH0_IPEND</name>
       <description>Channel 0 Interrupt Pending.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH1_IPEND</name>
       <description>Channel 1 Interrupt Pending.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH2_IPEND</name>
       <description>Channel 2 Interrupt Pending.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH3_IPEND</name>
       <description>Channel 3 Interrupt Pending.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH4_IPEND</name>
       <description>Channel 4 Interrupt Pending.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH5_IPEND</name>
       <description>Channel 5 Interrupt Pending.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH6_IPEND</name>
       <description>Channel 6 Interrupt Pending.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH7_IPEND</name>
       <description>Channel 7 Interrupt Pending.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH8_IPEND</name>
       <description>Channel 8 Interrupt Pending.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH9_IPEND</name>
       <description>Channel 9 Interrupt Pending.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH10_IPEND</name>
       <description>Channel 10 Interrupt Pending.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH11_IPEND</name>
       <description>Channel 11 Interrupt Pending.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH12_IPEND</name>
       <description>Channel 12 Interrupt Pending.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH13_IPEND</name>
       <description>Channel 13 Interrupt Pending.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH14_IPEND</name>
       <description>Channel 14 Interrupt Pending.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH15_IPEND</name>
       <description>Channel 15 Interrupt Pending.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Channel interrupt not currently asserted.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Channel interrupt pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <cluster>
     <dim>16</dim>
     <dimIncrement>4</dimIncrement>
     <name>CH[%s]</name>
     <description>DMA Channel registers.</description>
     <headerStructName>dma_ch</headerStructName>
     <addressOffset>0x100</addressOffset>
     <access>read-write</access>
     <register>
      <name>CFG</name>
      <description>DMA Channel Configuration Register.</description>
      <addressOffset>0x100</addressOffset>
      <fields>
       <field>
        <name>CHEN</name>
        <description>Channel Enable.  This bit is automatically cleared when DMA_ST.CH_ST changes from 1 to 0.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>RLDEN</name>
        <description>Reload Enable. Setting this bit to 1 enables DMA_SRC, DMA_DST and DMA_CNT to be reloaded with their corresponding reload registers upon count-to-zero. This bit is also writeable in the Count Reload Register. Refer to the description on Buffer Chaining for use of this bit. If buffer chaining is not used this bit must be written with a 0. This bit should be set after the reload registers have been programmed.</description>
        <bitOffset>1</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>PRI</name>
        <description>DMA Priority.</description>
        <bitOffset>2</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>high</name>
          <description>Highest Priority.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>medHigh</name>
          <description>Medium High Priority.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>medLow</name>
          <description>Medium Low Priority.</description>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>low</name>
          <description>Lowest Priority.</description>
          <value>3</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>REQSEL</name>
        <description>Request Select. Select DMA request line for this channel. If memory-to-memory is selected, the channel operates as if the request is always active.</description>
        <bitOffset>4</bitOffset>
        <bitWidth>6</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>MEMTOMEM</name>
          <description>Memory To Memory</description>
          <value>0x00</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI0RX</name>
          <description>SPI0 RX</description>
          <value>0x01</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI1RX</name>
          <description>SPI1 RX</description>
          <value>0x02</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI2RX</name>
          <description>SPI2 RX</description>
          <value>0x03</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART0RX</name>
          <description>UART0 RX</description>
          <value>0x04</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART1RX</name>
          <description>UART1 RX</description>
          <value>0x05</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C0RX</name>
          <description>I2C0 RX</description>
          <value>0x07</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C1RX</name>
          <description>I2C1 RX</description>
          <value>0x08</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>ADC</name>
          <description>Analog-to-Digital Converter Channel</description>
          <value>0x09</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART2RX</name>
          <description>UART2 RX</description>
          <value>0x0E</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI3RX</name>
          <description>SPI3 RX</description>
          <value>0x0F</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPIMSSRX</name>
          <description>SPIMSS RX</description>
          <value>0x10</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP1</name>
          <description>USB Endpoint 1 RX</description>
          <value>0x11</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP2</name>
          <description>USB Endpoint 2 RX</description>
          <value>0x12</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP3</name>
          <description>USB Endpoint 3 RX</description>
          <value>0x13</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP4</name>
          <description>USB Endpoint 4 RX</description>
          <value>0x14</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP5</name>
          <description>USB Endpoint 5 RX</description>
          <value>0x15</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP6</name>
          <description>USB Endpoint 6 RX</description>
          <value>0x16</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP7</name>
          <description>USB Endpoint 7 RX</description>
          <value>0x17</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP8</name>
          <description>USB Endpoint 8 RX</description>
          <value>0x18</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP9</name>
          <description>USB Endpoint 9 RX</description>
          <value>0x19</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP10</name>
          <description>USB Endpoint 10 RX</description>
          <value>0x1A</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP11</name>
          <description>USB Endpoint 11 RX</description>
          <value>0x1B</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI0TX</name>
          <description>SPI0 TX</description>
          <value>0x21</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI1TX</name>
          <description>SPI1 TX</description>
          <value>0x22</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI2TX</name>
          <description>SPI2 TX</description>
          <value>0x23</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART0TX</name>
          <description>UART0 TX</description>
          <value>0x24</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART1TX</name>
          <description>UART1 TX</description>
          <value>0x25</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C0TX</name>
          <description>I2C0 TX</description>
          <value>0x27</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C1TX</name>
          <description>I2C1 TX</description>
          <value>0x28</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART2TX</name>
          <description>UART2 TX</description>
          <value>0x2E</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI3TX</name>
          <description>SPI3 TX</description>
          <value>0x2F</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPIMSSTX</name>
          <description>SPIMSS TX</description>
          <value>0x30</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP1</name>
          <description>USB Endpoint 1 TX</description>
          <value>0x31</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP2</name>
          <description>USB Endpoint 2 TX</description>
          <value>0x32</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP3</name>
          <description>USB Endpoint 3 TX</description>
          <value>0x33</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP4</name>
          <description>USB Endpoint 4 TX</description>
          <value>0x34</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP5</name>
          <description>USB Endpoint 5 TX</description>
          <value>0x35</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP6</name>
          <description>USB Endpoint 6 TX</description>
          <value>0x36</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP7</name>
          <description>USB Endpoint 7 TX</description>
          <value>0x37</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP8</name>
          <description>USB Endpoint 8 TX</description>
          <value>0x38</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP9</name>
          <description>USB Endpoint 9 TX</description>
          <value>0x39</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP10</name>
          <description>USB Endpoint 10 TX</description>
          <value>0x3A</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP11</name>
          <description>USB Endpoint 11 TX</description>
          <value>0x3B</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>REQWAIT</name>
        <description>Request Wait Enable.  When enabled, delay timer start until DMA request transitions from active to inactive.</description>
        <bitOffset>10</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>normal</name>
          <description>Normal timer start.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>delay</name>
          <description>Delay timer start.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>TOSEL</name>
        <description>Time-Out Select. Selects the number of prescale clocks seen by the channel timer before a time-out conditions is generated for this channel. Important note: since the prescaler runs independent of the individual channel timers, the actual number of Pre-Scale clock edges seen has a margin of error equal to a single Pre-Scale clock.</description>
        <bitOffset>11</bitOffset>
        <bitWidth>3</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>to4</name>
          <description>Timeout of 3 to 4 prescale clocks.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to8</name>
          <description>Timeout of 7 to 8 prescale clocks.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to16</name>
          <description>Timeout of 15 to 16 prescale clocks.</description>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to32</name>
          <description>Timeout of 31 to 32 prescale clocks.</description>
          <value>3</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to64</name>
          <description>Timeout of 63 to 64 prescale clocks.</description>
          <value>4</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to128</name>
          <description>Timeout of 127 to 128 prescale clocks.</description>
          <value>5</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to256</name>
          <description>Timeout of 255 to 256 prescale clocks.</description>
          <value>6</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to512</name>
          <description>Timeout of 511 to 512 prescale clocks.</description>
          <value>7</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>PSSEL</name>
        <description>Pre-Scale Select. Selects the Pre-Scale divider for timer clock input.</description>
        <bitOffset>14</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable timer.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div256</name>
          <description>hclk / 256.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div64k</name>
          <description>hclk / 64k.</description>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div16M</name>
          <description>hclk / 16M.</description>
          <value>3</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>SRCWD</name>
        <description>Source Width. In most cases, this will be the data width of each AHB transactions. However, the width will be reduced in the cases where DMA_CNT indicates a smaller value.</description>
        <bitOffset>16</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>byte</name>
          <description>Byte.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>halfWord</name>
          <description>Halfword.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>word</name>
          <description>Word.</description>
          <value>2</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>SRINC</name>
        <description>Source Increment Enable. This bit enables DMA_SRC increment upon every AHB transaction. This bit is forced to 0 for DMA receive from peripherals.</description>
        <bitOffset>18</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>DSTWD</name>
        <description>Destination Width. Indicates the width of the each AHB transactions to the destination peripheral or memory. (The actual width may be less than this if there are insufficient bytes in the DMA FIFO for the full width).</description>
        <bitOffset>20</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>byte</name>
          <description>Byte.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>halfWord</name>
          <description>Halfword.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>word</name>
          <description>Word.</description>
          <value>2</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>DSTINC</name>
        <description>Destination Increment Enable. This bit enables DMA_DST increment upon every AHB transaction. This bit is forced to 0 for DMA transmit to peripherals.</description>
        <bitOffset>22</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>BRST</name>
        <description>Burst Size. The number of bytes to be transferred into and out of the DMA FIFO in a single burst.  Burst size equals 1 + value stored in this field.</description>
        <bitOffset>24</bitOffset>
        <bitWidth>5</bitWidth>
       </field>
       <field>
        <name>CHDIEN</name>
        <description>Channel Disable Interrupt Enable. When enabled, the IPEND will be set to 1 whenever CH_ST changes from 1 to 0.</description>
        <bitOffset>30</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>CTZIEN</name>
        <description>Count-to-zero Interrupts Enable. When enabled, the IPEND will be set to 1 whenever a count-to-zero event occurs.</description>
        <bitOffset>31</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
      </fields>
     </register>
     <register>
      <name>ST</name>
      <description>DMA Channel Status Register.</description>
      <addressOffset>0x104</addressOffset>
      <fields>
       <field>
        <name>CH_ST</name>
        <description>Channel Status. This bit is used to indicate to the programmer when it is safe to change the configuration, address, and count registers for the channel. Whenever this bit is cleared by hardware,  the DMA_CFG.CHEN bit is also cleared (if not cleared already).</description>
        <bitOffset>0</bitOffset>
        <bitWidth>1</bitWidth>
        <access>read-only</access>
        <enumeratedValues>
         <enumeratedValue>
          <name>disabled</name>
          <description>Disabled.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <description>Enabled.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>IPEND</name>
        <description>Channel Interrupt.</description>
        <bitOffset>1</bitOffset>
        <bitWidth>1</bitWidth>
        <access>read-only</access>
        <enumeratedValues>
         <enumeratedValue>
          <name>inactive</name>
          <description>No interrupt is pending.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>pending</name>
          <description>An interrupt is pending.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>CTZ_ST</name>
        <description>Count-to-Zero (CTZ) Status</description>
        <bitOffset>2</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
        <enumeratedValues>
         <name>ctz_st_enum_rd</name>
         <usage>read</usage>
         <enumeratedValue>
          <name>noEvent</name>
          <description>The event has not occurred.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>ctz_occur</name>
          <description>The event has occurred.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
        <enumeratedValues>
         <name>ctz_st_enum_wr</name>
         <usage>write</usage>
         <enumeratedValue>
          <name>Clear</name>
          <description>Clears the interrupt flag</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>RLD_ST</name>
        <description>Reload Status.</description>
        <bitOffset>3</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
        <enumeratedValues>
         <usage>read</usage>
         <enumeratedValue>
          <name>noEvent</name>
          <description>The event has not occurred.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>reloaded</name>
          <description>The event has occurred.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
        <enumeratedValues>
         <usage>write</usage>
         <enumeratedValue>
          <name>Clear</name>
          <description>Clears the interrupt flag</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>BUS_ERR</name>
        <description>Bus Error. Indicates that an AHB abort was received and the channel has been disabled.</description>
        <bitOffset>4</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
        <enumeratedValues>
         <usage>read</usage>
         <enumeratedValue>
          <name>noEvent</name>
          <description>The event has not occurred.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>bus_err</name>
          <description>The event has occurred.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
        <enumeratedValues>
         <usage>write</usage>
         <enumeratedValue>
          <name>Clear</name>
          <description>Clears the interrupt flag</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>TO_ST</name>
        <description>Time-Out Status.</description>
        <bitOffset>6</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
        <enumeratedValues>
         <usage>read</usage>
         <enumeratedValue>
          <name>noEvent</name>
          <description>The event has not occurred.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>expired</name>
          <description>The event has occurred.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
        <enumeratedValues>
         <usage>write</usage>
         <enumeratedValue>
          <name>Clear</name>
          <description>Clears the interrupt flag</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
      </fields>
     </register>
     <register>
      <name>SRC</name>
      <description>Source Device Address. If SRCINC=1, the counter bits are incremented by 1,2, or 4, depending on the data width of each AHB cycle. For peripheral transfers, some or all of the actual address bits are fixed. If SRCINC=0, this register remains constant. In the case where a count-to-zero condition occurs while RLDEN=1, the register is reloaded with the contents of DMA_SRC_RLD.</description>
      <addressOffset>0x108</addressOffset>
      <fields>
       <field>
        <name>ADDR</name>
        <bitOffset>0</bitOffset>
        <bitWidth>32</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>DST</name>
      <description>Destination Device Address. For peripheral transfers, some or all of the actual address bits are fixed. If DSTINC=1, this register is incremented on every AHB write out of the DMA FIFO. They are incremented by 1, 2, or 4, depending on the data width of each AHB cycle. In the case where a count-to-zero condition occurs while RLDEN=1, the register is reloaded with DMA_DST_RLD.</description>
      <addressOffset>0x10C</addressOffset>
      <fields>
       <field>
        <name>ADDR</name>
        <bitOffset>0</bitOffset>
        <bitWidth>32</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>CNT</name>
      <description>DMA Counter. The user loads this register with the number of bytes to transfer. This counter decreases on every AHB cycle into the DMA FIFO. The decrement will be 1, 2, or 4 depending on the data width of each AHB cycle. When the counter reaches 0, a count-to-zero condition is triggered.</description>
      <addressOffset>0x110</addressOffset>
      <fields>
       <field>
        <name>CNT</name>
        <description>DMA Counter.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>24</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>SRC_RLD</name>
      <description>Source Address Reload Value. The value of this register is loaded into DMA0_SRC upon a count-to-zero condition.</description>
      <addressOffset>0x114</addressOffset>
      <fields>
       <field>
        <name>SRC_RLD</name>
        <description>Source Address Reload Value.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>31</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>DST_RLD</name>
      <description>Destination Address Reload Value. The value of this register is loaded into DMA0_DST upon a count-to-zero condition.</description>
      <addressOffset>0x118</addressOffset>
      <fields>
       <field>
        <name>DST_RLD</name>
        <description>Destination Address Reload Value.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>31</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>CNT_RLD</name>
      <description>DMA Channel Count Reload Register.</description>
      <addressOffset>0x11C</addressOffset>
      <fields>
       <field>
        <name>CNT_RLD</name>
        <description>Count Reload Value. The value of this register is loaded into DMA0_CNT upon a count-to-zero condition.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>24</bitWidth>
       </field>
       <field>
        <name>RLDEN</name>
        <description>Reload Enable. This bit should be set after the address reload registers have been programmed. This bit is automatically cleared to 0 when reload occurs.</description>
        <bitOffset>31</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
      </fields>
     </register>
    </cluster>
   </registers>
  </peripheral>
<!--DMA DMA Controller Fully programmable, chaining capable DMA channels.-->
  <peripheral>
   <name>GCR</name>
   <description>Global Control Registers.</description>
   <baseAddress>0x40000000</baseAddress>
   <addressBlock>
    <offset>0</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>SCON</name>
     <description>System Control.</description>
     <addressOffset>0x00</addressOffset>
     <resetMask>0xFFFFFFFE</resetMask>
     <fields>
      <field>
       <name>BSTAPEN</name>
       <description>Boundary Scan TAP enable. When enabled, the JTAG port is connected to the Boundary Scan TAP. Otherwise, the port is connected to the ARM ICE function. This bit is reset by the POR. Reset value and access depend on the part number.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Boundary Scan TAP port disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Boundary Scan TAP port enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FLASH_PAGE_FLIP</name>
       <description>Flips the Flash bottom and top halves. (Depending on the total flash size, each half is either 256K or 512K). Initiating a flash page flip will cause a flush of both the data buffer on the DCODE bus and the internal instruction buffer.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Physical layout matches logical layout.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flipped</name>
         <description>Bottom half mapped to logical top half and vice versa.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CCACHE_FLUSH</name>
       <description>Code Cache Flush. This bit is used to flush the code caches and the instruction buffer of the Cortex-M4. </description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Code Cache Operation</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flush</name>
         <description>Code Caches and CPU instruction buffer are flushed </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DCACHE_FLUSH</name>
       <description>Write 1 to flush the external memory controller's 16KB cache. This bit is automatically cleared to 0 when the flush is complete.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal External Cache Operation</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flush</name>
         <description>External cache being flushed.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DCACHE_DIS</name>
       <description>Disable EMCC used for SPIXR or HyperBus/Xccela Bus code and data cache. </description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>enabled</name>
         <description>EMCC enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>disabled</name>
         <description>EMCC disabled and line buffer bypassed. </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CCHK</name>
       <description>Compute ROM Checksum. This bit is self-cleared when calculation is completed. Once set, software clearing this bit is ignored and the bit will remain set until the operation is completed.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CHKRES</name>
       <description>ROM Checksum Result. This bit is only valid when CHKRD=1.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>pass</name>
         <description>ROM Checksum Correct.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>fail</name>
         <description>ROM Checksum Fail.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>OVR</name>
       <description>These bits select the operating voltage range.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>0v9</name>
         <description>0.9V +/- 10%.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1V</name>
         <description>1.0V +/- 10%.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1V1</name>
         <description>1.1V +/- 10%.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>RST0</name>
     <description>Reset.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>DMA</name>
       <description>DMA Reset.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>WDT0</name>
       <description>Watchdog Timer Reset.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>GPIO0</name>
       <description>GPIO0 Reset. Setting this bit to 1 resets GPIO0 pins to their default states.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>GPIO1</name>
       <description>GPIO1 Reset. Setting this bit to 1 resets GPIO1 pins to their default states.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>GPIO2</name>
       <description>GPIO2 Reset. Setting this bit to 1 resets GPIO2 pins to their default states.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TIMER0</name>
       <description>Timer0 Reset. Setting this bit to 1 resets Timer 0 blocks.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TIMER1</name>
       <description>Timer1 Reset. Setting this bit to 1 resets Timer 1 blocks.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TIMER2</name>
       <description>Timer2 Reset. Setting this bit to 1 resets Timer 2 blocks.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TIMER3</name>
       <description>Timer3 Reset. Setting this bit to 1 resets Timer 3 blocks.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TIMER4</name>
       <description>Timer4 Reset. Setting this bit to 1 resets Timer 4 blocks.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TIMER5</name>
       <description>Timer5 Reset. Setting this bit to 1 resets Timer 5 blocks.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>UART0</name>
       <description>UART0 Reset. Setting this bit to 1 resets all UART 0 blocks.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>UART1</name>
       <description>UART1 Reset. Setting this bit to 1 resets all UART 1 blocks.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>SPI0</name>
       <description>SPI0 Reset. Setting this bit to 1 resets all SPI 0 blocks.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>SPI1</name>
       <description>SPI1 Reset. Setting this bit to 1 resets all SPI 1 blocks.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>SPI2</name>
       <description>SPI2 Reset. Setting this bit to 1 resets all SPI 2 blocks.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>I2C0</name>
       <description>I2C0 Reset.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>RTC</name>
       <description>RTC Reset.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TPU</name>
       <description>Trust Protection Unit Reset. Setting this bit to 1 resets the AES block, the SHA block and the DES block.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>HBC</name>
       <description>HyperBus/Xccela controller reset.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TFT</name>
       <description>TFT controller reset.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>USB</name>
       <description>USB Reset.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>ADC</name>
       <description>Analog to Digital converter reset.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>UART2</name>
       <description>UART 2 reset.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>SOFT</name>
       <description>Soft Reset. Setting this bit to 1 resets everything except the CPU and the watchdog timer.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>PERIPH</name>
       <description>Peripheral Reset. Setting this bit to 1 resets all peripherals. The CPU core, the watchdog timer, and all GPIO pins are unaffected by this reset.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>SYS</name>
       <description>System Reset. Setting this bit to 1 resets the CPU core and all peripherals, including the watchdog timer.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CLK_CTRL</name>
     <description>Clock Control.</description>
     <addressOffset>0x08</addressOffset>
     <resetValue>0x00000008</resetValue>
     <fields>
      <field>
       <name>SYSCLK_PRESCALE</name>
       <description>Prescaler Select. This 3 bit field sets the system operating frequency by controlling the prescaler that divides the output of the PLL0.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div1</name>
         <description>Divide by 1.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2</name>
         <description>Divide by 2.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div4</name>
         <description>Divide by 4.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div8</name>
         <description>Divide by 8.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div16</name>
         <description>Divide by 16.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div32</name>
         <description>Divide by 32.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div64</name>
         <description>Divide by 64.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div128</name>
         <description>Divide by 128.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSOSC_SEL</name>
       <description>Clock Source Select. This 3 bit field selects the source for the system clock.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CRYPTO</name>
         <description>Internal Primary Oscilatior Clock</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HFXIN</name>
         <description>24MHz Internal Oscillator is used for the system clock.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>NANORING</name>
         <description>8kHz Internal Nano Ring Oscillator is used for the system clock.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HIRC96</name>
         <description>120 MHz Internal Oscillator.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>HIRC8</name>
         <description>Internal 7.3728MHz oscillator.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>X32K</name>
         <description>External 32KHz oscillator.</description>
         <value>6</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSOSC_RDY</name>
       <description>Clock Ready. This read only bit reflects whether the currently selected system clock source is running.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>busy</name>
         <description>Switchover to the new clock source (as selected by CLKSEL) has not yet occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>System clock running from CLKSEL clock source.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CCD</name>
       <description>Cryptographic clock divider</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>non_div</name>
         <description>The cryptographic accelerator clock is running in non-divided mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div</name>
         <description>The cryptographic accelerator clock is running in divided mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>X32K_EN</name>
       <description>32KHz External Clock Enable.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="X32K_EN">
       <name>CRYPTO_EN</name>
       <description>50MHz High Frequency Internal Reference Clock Enable.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="X32K_EN">
       <name>HIRC96_EN</name>
       <description>120MHz High Frequency Internal Reference Clock Enable.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="X32K_EN">
       <name>HIRC8_EN</name>
       <description>7.3728MHz High Frequency Internal Reference Clock Enable.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HIRC8_VS</name>
       <description>7.3728MHz Internal Oscillator Voltage Source Select</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>X32K_RDY</name>
       <description>32KHz External Oscillator Ready.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="IPO_RDY">
       <name>CRYPTO_RDY</name>
       <description>50MHz Internal Oscillator Ready.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="X32K_RDY">
       <name>HIRC96_RDY</name>
       <description>120MHz Internal Oscillator Ready.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="X32K_RDY">
       <name>HIRC8_RDY</name>
       <description>7.3728MHz Internal Oscillator Ready.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="X32K_RDY">
       <name>NANORING_RDY</name>
       <description>Internal Nano Ring Oscillator Low Frequency Reference Clock Ready.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PMR</name>
     <description>Power Management.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>MODE</name>
       <description>Operating Mode. This two bit field selects the current operating mode for the device. Note that code execution only occurs during ACTIVE mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Active Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>backup</name>
         <description>Backup Mode.</description>
         <value>4</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GPIOWKEN</name>
       <description>GPIO Wake Up Enable. This bit enables all GPIO pins as potential wakeup sources. Any GPIO configured for wakeup is capable of causing an exit from IDLE or STANDBY modes when this bit is set.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RTCWKEN</name>
       <description>RTC Wake Up Enable. This bit enables an RTC alarm to wake the device from any low-power mode to ACTIVE mode.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>USBWKEN</name>
       <description>USB Wake Up Enable. This enables a USB wakeup event to cause the device to exit from all low power modes into ACTIVE mode.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CRYPTOPD</name>
       <description>Crypto Oscilator Power Down. This bit selects whether the oscillator is automatically powered down when the device transitions to DEEPSLEEP mode. </description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Mode is Active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>deepsleep</name>
         <description>Powered down in DEEPSLEEP.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HIRC96PD</name>
       <description>120MHz Internal Oscillator power down. This bit selects whether the oscillator is automatically powered down when the device transitions to DEEPSLEEP mode. </description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Mode is Active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>deepsleep</name>
         <description>Powered down in DEEPSLEEP.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HIRC8PD</name>
       <description>7.3728MHz Internal Oscillator power down. This bit selects whether the oscillator is automatically powered down when the device transitions to DEEPSLEEP mode. </description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Mode is Active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>deepsleep</name>
         <description>Powered down in DEEPSLEEP.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PCLK_DIV</name>
     <description>Peripheral Clock Divider.</description>
     <addressOffset>0x18</addressOffset>
     <resetValue>0x00000001</resetValue>
     <fields>
      <field>
       <name>SDHCFRQ</name>
       <description>This bit selects the frequency of the SDHC clock. If set, the clock oscillates at 50Mhz, otherwise it will oscillate at 60MHz.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>60M</name>
         <description>SDHC Freq = 120MHz/2.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>50M</name>
         <description>SDHC Freq = 50Mhz.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADCFRQ</name>
       <description>ADC Clock divider. ADC Clock Frequency = Periph_Clock/adcfrq. Values 0 and 1 invalid.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div2</name>
         <description>ADC Freq = Periph_Clock/2.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div3</name>
         <description>ADC Freq = Periph_Clock/3.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div4</name>
         <description>ADC Freq = Periph_Clock/4.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div5</name>
         <description>ADC Freq = Periph_Clock/5.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div6</name>
         <description>ADC Freq = Periph_Clock/6.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div7</name>
         <description>ADC Freq = Periph_Clock/7.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div8</name>
         <description>ADC Freq = Periph_Clock/8.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div9</name>
         <description>ADC Freq = Periph_Clock/9.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div10</name>
         <description>ADC Freq = Periph_Clock/10.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div11</name>
         <description>ADC Freq = Periph_Clock/11.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div12</name>
         <description>ADC Freq = Periph_Clock/12.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div13</name>
         <description>ADC Freq = Periph_Clock/13.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div14</name>
         <description>ADC Freq = Periph_Clock/14.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div15</name>
         <description>ADC Freq = Periph_Clock/15.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AONDIV</name>
       <description>Always-ON (AON) domain CLock Divider. These bits define the AON domain clock divider.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div4</name>
         <description>PCLK divide by 4.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div8</name>
         <description>PCLK divide by 8.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div16</name>
         <description>PCLK divide by 16.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div32</name>
         <description>PCLK divide by 32.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PCLK_DIS0</name>
     <description>Peripheral Clock Disable.</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>GPIO0</name>
       <description>GPIO0 Clock Disable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GPIO1</name>
       <description>GPIO1 Disable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GPIO2</name>
       <description>GPIO2 Disable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>USB</name>
       <description>USB Disable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TFT</name>
       <description>TFT Disable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DMA</name>
       <description>DMA Disable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SPI0</name>
       <description>SPI 0 Disable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SPI1</name>
       <description>SPI 1 Disable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SPI2</name>
       <description>SPI 2 Disable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>UART0</name>
       <description>UART 0 Disable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>UART1</name>
       <description>UART 1 Disable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2C0</name>
       <description>I2C 0 Disable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TPU</name>
       <description>Trust Protection Unit Disable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TIMER0</name>
       <description>Timer 0 Disable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TIMER1</name>
       <description>Timer 1 Disable.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TIMER2</name>
       <description>Timer 2 Disable.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TIMER3</name>
       <description>Timer 3 Disable.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TIMER4</name>
       <description>Timer 4 Disable.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TIMER5</name>
       <description>Timer 5 Disable.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADC</name>
       <description>ADC Disable.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2C1</name>
       <description>I2C 1 Disable.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PT</name>
       <description>Pulse Train Engine Disable.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SPIXIPF</name>
       <description>SPI-XIPF Disable.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SPIXIPM</name>
       <description>XSPI Master Clock Disable.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>MEM_CLK</name>
     <description>Memory Clock Control Register.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>FWS</name>
       <description>Flash Wait State. These bits define the number of wait-state cycles per Flash data read access. Minimum wait state is 1.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>SYSRAM0LS</name>
       <description>System RAM 0 Light Sleep Mode. Write 1 to put RAM0 in light sleep power mode.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM1LS</name>
       <description>System RAM 1 Light Sleep Mode. Write 1 to put RAM1 in light sleep power mode.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM2LS</name>
       <description>System RAM 2 Light Sleep Mode. Write 1 to put RAM2 in light sleep power mode.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM3LS</name>
       <description>System RAM 3 Light Sleep Mode. Write 1 to put RAM3 in light sleep power mode.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM4LS</name>
       <description>System RAM 4 Light Sleep Mode. Write 1 to put RAM4 in light sleep power mode.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM5LS</name>
       <description>System RAM 4 Light Sleep Mode. Write 1 to put RAM5 in light sleep power mode.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM6LS</name>
       <description>System RAM 4 Light Sleep Mode. Write 1 to put RAM6 in light sleep power mode.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ICACHELS</name>
       <description>ICache RAM Light Sleep Mode.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ICACHEXIPLS</name>
       <description>SPI-XIPF Instruction Cache RAM Light Sleep Mode.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCACHELS</name>
       <description>Internal RAM Cache Light Sleep Mode.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CRYPTOLS</name>
       <description>Crypto RAM Light Sleep Mode.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>USBLS</name>
       <description>USB FIFO Light Sleep Mode.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ROMLS</name>
       <description>ROM Light Sleep Mode.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>MEM_ZERO</name>
     <description>Memory Zeroize Control.</description>
     <addressOffset>0x2C</addressOffset>
     <fields>
      <field>
       <name>SRAM0Z</name>
       <description>System RAM Block 0.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRAM1Z</name>
       <description>System RAM Block 1.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRAM2Z</name>
       <description>System RAM Block 2.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRAM3Z</name>
       <description>System RAM Block 3.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRAM4Z</name>
       <description>System RAM Block 4.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRAM5Z</name>
       <description>System RAM Block 5.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRAM6Z</name>
       <description>System RAM Block 6.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ICACHEZ</name>
       <description>Instruction Cache (ICC0) zeroization.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ICACHEXIPZ</name>
       <description>SPI-XIPF Instruction Cache (ICC1) zeroization.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCACHEDATAZ</name>
       <description>EMCC data zeroization.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCACHETAGZ</name>
       <description>EMCC tag zeroization.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CRYPTOZ</name>
       <description>Crypto MAA Memory zeroization.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>USBFIFOZ</name>
       <description>USB FIFO zeroization.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SYS_STAT</name>
     <description>System Status Register.</description>
     <addressOffset>0x40</addressOffset>
     <fields>
      <field>
       <name>ICELOCK</name>
       <description>ARM ICE Lock Status.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>unlocked</name>
         <description>ICE is unlocked.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>locked</name>
         <description>ICE is locked.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CODEINTERR</name>
       <description>Flash SPI-XIPF Code Integrity Error Status Flag.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noerr</name>
         <description> .</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>err</name>
         <description>SPI-XIPF code integrity error.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCMEMF</name>
       <description>HyperBus/Xccela Cache Memory Error Status Flag.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noerr</name>
         <description>Normal operation.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>memfault</name>
         <description>HyperBus/Xccela cahce memory fault.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>RST1</name>
     <description>Reset 1.</description>
     <addressOffset>0x44</addressOffset>
     <fields>
      <field>
       <name>I2C1</name>
       <description>I2C1 Reset.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>PT</name>
       <description>Pulse Train Reset.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>SPIXIP</name>
       <description>SPI-XIPF Reset.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>XSPIM</name>
       <description>XSPI Master Reset.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>GPIO3</name>
       <description>GPIO3 Reset.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>SDHC</name>
       <description>SDHC Reset.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>OWIRE</name>
       <description>One-Wire Reset.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>WDT1</name>
       <description>WDT1 Reset.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>SPI3</name>
       <description>SPI3 Reset.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>I2S</name>
       <description>I2S (SPIMSS) Reset.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>XIPR</name>
       <description>SPIXR Reset.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>SEMA</name>
       <description>Semaphore Block Reset.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PCLK_DIS1</name>
     <description>Peripheral Clock Disable.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>UART2</name>
       <description>UART2 Disable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TRNG</name>
       <description>TRNG Disable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SFLC</name>
       <description>Secore Flash Controller Clock Disable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HBC</name>
       <description>HyperBus/Xccela Clock Disable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GPIO3</name>
       <description>GPIO3 Disable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCACHE</name>
       <description>System Cache Clock Disable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SDMA</name>
       <description>Smart DMA Clock Disable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SEMA</name>
       <description>Semaphore Block Clock Disable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SDHC</name>
       <description>SDHC Controller Clock Disable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ICACHE</name>
       <description>Flash Instruction Cache Clock Disable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ICACHEXIPF</name>
       <description>SPI-XIPF Flash Clock Disable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>OW</name>
       <description>One-Wire Clock Disable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SPI3</name>
       <description>SPI3 Clock Disable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2S</name>
       <description>I2S (SPIMSS) Clock Disable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SPIXIPR</name>
       <description>SPIXR RAM Clock Disable.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Clock enabled to the peripheral.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Clock disabled to the peripheral.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>EVENT_EN</name>
     <description>Event Enable Register.</description>
     <addressOffset>0x4C</addressOffset>
     <fields>
      <field>
       <name>DMAEVENT</name>
       <description>Enable DMA event. When this bit is set, a DMA event will cause an RXEV event to wake the CPU from WFE sleep mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>DMA CTZ Event will not wake up the device.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>DMA CTZ Event Wake-up Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXEVENT</name>
       <description>Enable RXEV pin event. When this bit is set, a logic high of GPIO0[24] will cause an RXEV event to wake the CPU from WFE sleep mode. </description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>A receive event is not generated when an external input transitions from low to high.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>A receive event is generated when external event is triggered.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXEVENT</name>
       <description>Enable TXEV pin event. When this bit is set, TXEV event from the CPU is output to GPIO[25].</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Transmit event disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>A transmit event is enabled on Send Event instruction.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>REV</name>
     <description>Revision Register.</description>
     <addressOffset>0x50</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>REVISION</name>
       <description>Manufacturer Chip Revision. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SYS_STAT_IE</name>
     <description>System Status Interrupt Enable Register.</description>
     <addressOffset>0x54</addressOffset>
     <fields>
      <field>
       <name>ICEULIE</name>
       <description>ARM ICE Unlock Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CIEIE</name>
       <description>SPI-XIPF Code Intergrity Error Interrupt Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCMFIE</name>
       <description>HyperBus/Xccela Cache Memory Fault Interrupt Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--GCR Global Control Registers.-->
  <peripheral>
   <name>RTC</name>
   <description>Real Time Clock and Alarm.</description>
   <baseAddress>0x40006000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>RTC</name>
    <description>RTC interrupt.</description>
    <value>3</value>
   </interrupt>
   <registers>
    <register>
     <name>SEC</name>
     <description>RTC Second Counter. This register contains the 32-bit second counter.</description>
     <addressOffset>0x00</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>SEC</name>
       <description>RTC Seconds Counter.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SSEC</name>
     <description>RTC Sub-second Counter. This counter increments at 256Hz. RTC_SEC is incremented when this register rolls over from 0xFF to 0x00.</description>
     <addressOffset>0x04</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>SSEC</name>
       <description>RTC Sub-second Counter.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>TODA</name>
     <description>Time-of-day Alarm.</description>
     <addressOffset>0x08</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>TOD_ALARM</name>
       <description>Time-of-day Alarm.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>20</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SSECA</name>
     <description>RTC sub-second alarm.  This register contains the reload value for the sub-second alarm.</description>
     <addressOffset>0x0C</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>SSEC_ALARM</name>
       <description>This register contains the reload value for the sub-second alarm.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL</name>
     <description>RTC Control Register.</description>
     <addressOffset>0x10</addressOffset>
     <resetValue>0x00000008</resetValue>
     <resetMask>0xFFFFFF38</resetMask>
     <fields>
      <field>
       <name>ENABLE</name>
       <description>Real Time Clock Enable. This bit enables the Real Time Clock. This bit can only be written when WE=1 and BUSY =0. Change to this bit is effective only after BUSY is cleared from 1 to 0.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TOD_ALARM_EN</name>
       <description>Alarm Time-of-Day Interrupt Enable. Change to this bit is effective only after BUSY is cleared from 1 to 0.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSEC_ALARM_EN</name>
       <description>Alarm Sub-second Interrupt Enable.  Change to this bit is effective only after BUSY is cleared from 1 to 0.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BUSY</name>
       <description>RTC Busy. This bit is set to 1 by hardware when changes to RTC registers required a synchronized version of the register to be in place.  This bit is automatically cleared by hardware.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>Idle.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Busy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>READY</name>
       <description>RTC Ready. This bit is set to 1 by hardware when the RTC count registers update.  It can be cleared to 0 by software at any time. It will also be cleared to 0 by hardware just prior to an update of the RTC count register.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_ready</name>
         <description>Register has not updated.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>READY_INT_EN</name>
       <description>RTC Ready Interrupt Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TOD_ALARM_FL</name>
       <description>Time-of-Day Alarm Interrupt Flag.  This alarm is qualified as wake-up source to the processor.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Not active</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Pending</name>
         <description>Active</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSEC_ALARM_FL</name>
       <description>Sub-second Alarm Interrupt Flag. This alarm is qualified as wake-up source to the processor.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Not active</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Pending</name>
         <description>Active</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SQWOUT_EN</name>
       <description>Square Wave Output Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FREQ_SEL</name>
       <description>Frequency Output Selection. When SQE=1, these bits specify the output frequency on the SQW pin.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>freq1Hz</name>
         <description>1 Hz (Compensated).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq512Hz</name>
         <description>512 Hz (Compensated).</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq4KHz</name>
         <description>4 KHz.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ACRE</name>
       <description>Asynchronous Counter Read Enable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>sync</name>
         <description>SEC and SSEC registers synchronized and should only be accessed while CTRL.rdy = 1.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>async</name>
         <description>SEC and SSEC registers are asynchronous and will require software interaction to ensure data accuracy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WRITE_EN</name>
       <description>Write Enable. This register bit serves as a protection mechanism against unintentional writes to critical RTC bits.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Writes to RTC_CTRL.enable are ignored.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Writes to RTC_CTRL.enable are allowed.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OSCCTRL</name>
     <description>RTC Oscillator Control Register.</description>
     <addressOffset>0x18</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>BYPASS</name>
       <description>RTC Crystal Bypass</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>32KOUT</name>
       <description>RTC 32kHz Square Wave Output</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--RTC Real Time Clock and Alarm.-->
  <peripheral>
   <name>PWRSEQ</name>
   <description>Power Sequencer / Low Power Control Register.</description>
   <baseAddress>0x40006800</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>CTRL</name>
     <description>Low Power Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>RAMRET</name>
       <description>System RAM retention in BACKUP mode. These two bits are used in conjuction with RREGEN bit. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable Ram Retention.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en1</name>
         <description>Enable System RAM 0 retention.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en2</name>
         <description>Enable System RAM 0 and 1 retention.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en3</name>
         <description>Enable System RAM 0 and 1 retention, if RREGEN=0, Enable all System RAM retention.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RREGEN</name>
       <description>Backup Mode RAM Retention Regulator Enable</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BKGRND</name>
       <description>Background Mode Enable. This bit allows low-power background mode operations, while the CPU is in DeepSleep.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FWKM</name>
       <description>Fast Wake-Up Mode. This bit enables fast wake-up from DeepSleep mode. (5uS typical). </description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BGOFF</name>
       <description>Bandgap OFF. This controls the System Bandgap in DeepSleep mode.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>on</name>
         <description>Bandgap is always ON.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>off</name>
         <description>Bandgap is OFF in DeepSleep mode(default).</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PORVCOREMD</name>
       <description>VCORE POR Monitor for DEEPSLEEP and BACKUP Disable Write 1 to disable the power failure monitor. With the power failure monitor enabled, if the voltage drops below the trigger voltage the device enters a Power-On Reset.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON(default)</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VCOREMD</name>
       <description>VDDC(Vcore) Monitor Disable. This bit controls the power monitor on the VCore supply in all operating modes.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON(default)</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VRTCMD</name>
       <description>VRTC Monitor Disable. This bit controls the power monitor on the Always-On Supply in all operating modes.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON(default)</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VDDAMD</name>
       <description>VDDA Monitor Disable. This bit controls the power monitor of the Analog Supply in all operating modes.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON(default)</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VDDIOMD</name>
       <description>VDDIO Monitor Disable. This bit controls the power monitor of the Analog Supply in all operating modes.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON(default)</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VDDIOHMD</name>
       <description>VFDDIOH Monitor Disable. This bit controls the power monitor of the Analog Supply in all operating modes.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON(default)</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PORVDDIOMD</name>
       <description>VFDDIOH Monitor Disable. This bit controls the power monitor of the Analog Supply in all operating modes.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON(default)</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PORVDDIOHMD</name>
       <description>VFDDIOH Monitor Disable. This bit controls the power monitor of the Analog Supply in all operating modes.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON(default)</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VDDBMD</name>
       <description>VDDB Power-On Reset Monitor Disable. This bit controls the Power-On Reset monitor on VDDB supply in all operating mods.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>GPIO0_WK_FL</name>
     <description>Low Power I/O Wakeup Status Register 0. This register indicates the low power wakeup status for GPIO0.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>WAKEST</name>
       <description>Wakeup IRQ flags (write ones to clear). One or more of these bits will be set when the corresponding dedicated GPIO pin(s) transition(s) from low to high or high to low. If GPIO wakeup source is selected, using PM.GPIOWKEN register, and the corresponding bit is also selected in LPWKEN register, an interrupt will be gnerated to wake up the CPU from a low power mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>GPIO0_WK_EN</name>
     <description>Low Power I/O Wakeup Enable Register 0. This register enables low power wakeup functionality for GPIO0.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>WAKEEN</name>
       <description>Enable wakeup. These bits allow wakeup from the corresponding GPIO pin(s) on transition(s) from low to high or high to low when PM.GPIOWKEN is set. Wakeup status is indicated in PPWKST register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>GPIO1_WK_FL</name>
     <description>Low Power I/O Wakeup Status Register 1. This register indicates the low power wakeup status for GPIO1.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>WAKEST</name>
       <description>Wakeup IRQ flags (write ones to clear). One or more of these bits will be set when the corresponding dedicated GPIO pin(s) transition(s) from low to high or high to low. If GPIO wakeup source is selected, using PM.GPIOWKEN register, and the corresponding bit is also selected in LPWKEN register, an interrupt will be gnerated to wake up the CPU from a low power mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>GPIO1_WK_EN</name>
     <description>Low Power I/O Wakeup Enable Register 1. This register enables low power wakeup functionality for GPIO1.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>WAKEEN</name>
       <description>Enable wakeup. These bits allow wakeup from the corresponding GPIO pin(s) on transition(s) from low to high or high to low when PM.GPIOWKEN is set. Wakeup status is indicated in PPWKST register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>GPIO2_WK_FL</name>
     <description>Low Power I/O Wakeup Status Register 0. This register indicates the low power wakeup status for GPIO2.</description>
     <addressOffset>0x14</addressOffset>
     <fields>
      <field>
       <name>WAKEST</name>
       <description>Wakeup IRQ flags (write ones to clear). One or more of these bits will be set when the corresponding dedicated GPIO pin(s) transition(s) from low to high or high to low. If GPIO wakeup source is selected, using PM.GPIOWKEN register, and the corresponding bit is also selected in LPWKEN register, an interrupt will be gnerated to wake up the CPU from a low power mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>GPIO2_WK_EN</name>
     <description>Low Power I/O Wakeup Enable Register 0. This register enables low power wakeup functionality for GPIO0.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>WAKEEN</name>
       <description>Enable wakeup. These bits allow wakeup from the corresponding GPIO pin(s) on transition(s) from low to high or high to low when PM.GPIOWKEN is set. Wakeup status is indicated in PPWKST register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>GPIO3_WK_FL</name>
     <description>Low Power I/O Wakeup Status Register 0. This register indicates the low power wakeup status for GPIO3.</description>
     <addressOffset>0x1C</addressOffset>
     <fields>
      <field>
       <name>WAKEST</name>
       <description>Wakeup IRQ flags (write ones to clear). One or more of these bits will be set when the corresponding dedicated GPIO pin(s) transition(s) from low to high or high to low. If GPIO wakeup source is selected, using PM.GPIOWKEN register, and the corresponding bit is also selected in LPWKEN register, an interrupt will be gnerated to wake up the CPU from a low power mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>10</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>GPIO3_WK_EN</name>
     <description>Low Power I/O Wakeup Enable Register 0. This register enables low power wakeup functionality for GPIO3.</description>
     <addressOffset>0x20</addressOffset>
     <fields>
      <field>
       <name>WAKEEN</name>
       <description>Enable wakeup. These bits allow wakeup from the corresponding GPIO pin(s) on transition(s) from low to high or high to low when PM.GPIOWKEN is set. Wakeup status is indicated in PPWKST register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>10</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>USB_WK_FL</name>
     <description>Low Power Peripheral Wakeup Status Register.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>USBLSWKST</name>
       <description>USB UTMI Linestate Detect Wakeup Flag(write one to clear). One or both of these bits will be set when the USB bus activity causes the linestate to change and the device to wake while USB wakeup is enabled using PMLUSBWKEN.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dplus</name>
         <description>D Plus line state change.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dminus</name>
         <description>D Minus line state change.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>USBVBUSWKST</name>
       <description>USB VBUS Detect Wakeup Flag (write one to clear). This bit will be set when the USB power supply is powered on or powered off.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal operation.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>stchng</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>USB_WK_EN</name>
     <description>Low Power Peripheral Wakeup Enable Register.</description>
     <addressOffset>0x34</addressOffset>
     <fields>
      <field>
       <name>USBLSWKEN</name>
       <description>USB UTMI Linestate Detect Wakeup Enable. These bits allow wakeup from the corresponding USB linestate signal(s) on transition(s) from low to high or high to low when PM.USBWKEN is set.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>USBVBUSWKEN</name>
       <description>USB VBUS Detect Wakeup Enable. This bit allows wakeup from the USB power supply on or off status.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>MEM_PWR</name>
     <description>Low Power Memory Shutdown Control.</description>
     <addressOffset>0x40</addressOffset>
     <fields>
      <field>
       <name>SRAM0SD</name>
       <description>System RAM block 0 Shut Down.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRAM1SD</name>
       <description>System RAM block 1 Shut Down.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRAM2SD</name>
       <description>System RAM block 2 Shut Down.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRAM3SD</name>
       <description>System RAM block 3 Shut Down.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRAM4SD</name>
       <description>System RAM block 4 Shut Down.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRAM5SD</name>
       <description>System RAM block 5 Shut Down.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRAM6SD</name>
       <description>System RAM block 6 Shut Down.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ICACHESD</name>
       <description>Instruction Cache RAM Shut Down.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ICACHEXIPSD</name>
       <description>XiP Instruction Cache RAM Shut Down.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCACHESD</name>
       <description>System Cache RAM Shut Down.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CRYPTOSD</name>
       <description>Crypto MAA RAM Shut Down.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>USBFIFOSD</name>
       <description>USB FIFO Shut Down.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ROMSD</name>
       <description>ROM Shut Down.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--PWRSEQ Power Sequencer / Low Power Control Register.-->
  <peripheral>
   <name>GPIO0</name>
   <description>Individual I/O for each GPIO</description>
   <groupName>GPIO</groupName>
   <baseAddress>0x40008000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>GPIO0</name>
    <description>GPIO0 interrupt.</description>
    <value>24</value>
   </interrupt>
   <registers>
    <register>
     <name>EN</name>
     <description>GPIO Function Enable Register. Each bit controls the GPIO_EN setting for one GPIO pin on the associated port.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>alternate</name>
         <description>Alternate function enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>GPIO</name>
         <description>GPIO function is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>EN_SET</name>
     <description>GPIO Set Function Enable Register. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>set</name>
         <description>Set the corresponding bit in GPIO_EN register.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>EN_CLR</name>
     <description>GPIO Clear Function Enable Register. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <description>Clear the corresponding bit in GPIO_EN register.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_EN</name>
     <description>GPIO Output Enable Register. Each bit controls the GPIO_OUT_EN setting for one GPIO pin in the associated port.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>GPIO_OUT_EN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>GPIO Output Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>GPIO Output Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_EN_SET</name>
     <description>GPIO Output Enable Set Function Enable Register. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_OUT_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>GPIO_OUT_EN_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>set</name>
         <description>Set the corresponding bit in GPIO_OUT_EN register.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_EN_CLR</name>
     <description>GPIO Output Enable Clear Function Enable Register. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_OUT_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x14</addressOffset>
     <fields>
      <field>
       <name>GPIO_OUT_EN_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <description>Clear the corresponding bit in GPIO_OUT_EN register.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT</name>
     <description>GPIO Output Register. Each bit controls the GPIO_OUT setting for one pin in the associated port.  This register can be written either directly, or by using the GPIO_OUT_SET and GPIO_OUT_CLR registers.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>GPIO_OUT</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>low</name>
         <description>Drive Logic 0 (low) on GPIO output.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>high</name>
         <description>Drive logic 1 (high) on GPIO output.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_SET</name>
     <description>GPIO Output Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_OUT to 1, without affecting other bits in that register.</description>
     <addressOffset>0x1C</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>GPIO_OUT_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>set</name>
         <description>Set the corresponding bit in GPIO_OUT register.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_CLR</name>
     <description>GPIO Output Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_OUT to 0, without affecting other bits in that register.</description>
     <addressOffset>0x20</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>GPIO_OUT_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <description>Clear the corresponding bit in GPIO_OUT register.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>IN</name>
     <description>GPIO Input Register. Read-only register to read from the logic states of the GPIO pins on this port.</description>
     <addressOffset>0x24</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>GPIO_IN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>low</name>
         <description>Logic 0 (low) on GPIO input.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>high</name>
         <description>Logic 1 (high) on GPIO input.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_MODE</name>
     <description>GPIO Interrupt Mode Register. Each bit in this register controls the interrupt mode setting for the associated GPIO pin on this port.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_MODE</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>level</name>
         <description>Interrupts for this pin are level triggered.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>edge</name>
         <description>Interrupts for this pin are edge triggered.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_POL</name>
     <description>GPIO Interrupt Polarity Register. Each bit in this register controls the interrupt polarity setting for one GPIO pin in the associated port.</description>
     <addressOffset>0x2C</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_POL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>falling</name>
         <description>Interrupts are latched on a falling edge or low level condition for this pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>rising</name>
         <description>Interrupts are latched on a rising edge or high condition for this pin.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>IN_EN</name>
     <description>GPIO Port Input Enable.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>GPIO_IN_EN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>GPIO Input Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>GPIO Input Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>GPIO Interrupt Enable Register. Each bit in this register controls the GPIO interrupt enable for the associated pin on the GPIO port.</description>
     <addressOffset>0x34</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_EN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupts are disabled for this GPIO pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupts are enabled for this GPIO pin.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN_SET</name>
     <description>GPIO Interrupt Enable Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_INT_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x38</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_EN_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>set</name>
         <description>Set GPIO_INT_EN bit in this position to '1'</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN_CLR</name>
     <description>GPIO Interrupt Enable Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_INT_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x3C</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_EN_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <description>Clear GPIO_INT_EN bit in this position to '0'</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_STAT</name>
     <description>GPIO Interrupt Status Register. Each bit in this register contains the pending interrupt status for the associated GPIO pin in this port.</description>
     <addressOffset>0x40</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>GPIO_INT_STAT</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Interrupt is pending on this GPIO pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An Interrupt is pending on this GPIO pin.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_CLR</name>
     <description>GPIO Status Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_INT_STAT to 0, without affecting other bits in that register.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <description>Clear the corresponding bit in GPIO_INT_STAT register.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_EN</name>
     <description>GPIO Wake Enable Register. Each bit in this register controls the PMU wakeup enable for the associated GPIO pin in this port.</description>
     <addressOffset>0x4C</addressOffset>
     <fields>
      <field>
       <name>GPIO_WAKE_EN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>PMU wakeup for this GPIO is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>PMU wakeup for this GPIO is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_EN_SET</name>
     <description>GPIO Wake Enable Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_WAKE_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x50</addressOffset>
     <fields>
      <field>
       <name>GPIO_WAKE_EN_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>set</name>
         <description>Set the corresponding bit in GPIO_WAKE_EN register.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_EN_CLR</name>
     <description>GPIO Wake Enable Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_WAKE_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x54</addressOffset>
     <fields>
      <field>
       <name>GPIO_WAKE_EN_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <description>Clear the corresponding bit in GPIO_WAKE_EN register.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_DUAL_EDGE</name>
     <description>GPIO Interrupt Dual Edge Mode Register. Each bit in this register selects dual edge mode for the associated GPIO pin in this port.</description>
     <addressOffset>0x5C</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_DUAL_EDGE</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dual</name>
         <description>Dual Edge mode is enabled. If edge-triggered interrupts are enabled on this GPIO pin, then both rising and falling edges will trigger interrupts regardless of the GPIO_INT_POL setting.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PDPU_SEL0</name>
     <description>GPIO Input Mode Config 1. Each bit in this register enables the weak pull-up for the associated GPIO pin in this port.</description>
     <addressOffset>0x60</addressOffset>
     <fields>
      <field>
       <name>GPIO_PDPU_SEL0</name>
       <description>The two bits in GPIO_PDPU_SEL0 and GPIO_PDPU_SEL1 for each GPIO pin work together to determine the pad mode when the GPIO is set to input mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>impedance</name>
         <description>High Impedance.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pu</name>
         <description>Pull-up mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PDPU_SEL1</name>
     <description>GPIO Input Mode Config 2. Each bit in this register enables the pull-down for the associated GPIO pin in this port.</description>
     <addressOffset>0x64</addressOffset>
     <fields>
      <field>
       <name>GPIO_PDPU_SEL1</name>
       <description>The two bits in GPIO_PDPU_SEL0 and GPIO_PDPU_SEL1 for each GPIO pin work together to determine the pad mode when the GPIO is set to input mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>impedance</name>
         <description>High Impedance.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pd</name>
         <description>Pull-down mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>AF_SEL</name>
     <description>GPIO Alternate Function Enable Register. Each bit in this register selects between primary/secondary functions for the associated GPIO pin in this port.</description>
     <addressOffset>0x68</addressOffset>
     <fields>
      <field>
       <name>GPIO_AF_SEL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>primary</name>
         <description>Primary function selected.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>secondary</name>
         <description>Secondary function selected.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>AF_SEL_SET</name>
     <description>GPIO Alternate Function Selectset. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_EN1 to 1, without affecting other bits in that register.</description>
     <addressOffset>0x6C</addressOffset>
     <fields>
      <field>
       <name>AF_SEL_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>set</name>
         <description>Set the corresponding bit in GPIO_AF_SEL register.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>AF_SEL_CLR</name>
     <description>GPIO Alternate Function Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_EN1 to 0, without affecting other bits in that register.</description>
     <addressOffset>0x70</addressOffset>
     <fields>
      <field>
       <name>GPIO_AF_SEL_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <description>Clear the corresponding bit in GPIO_AF_SEL register.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>DS_SEL0</name>
     <description>GPIO Drive Strength  Register. Each bit in this register selects the drive strength for the associated GPIO pin in this port. Refer to the Datasheet for sink/source current of GPIO pins in each mode. The total drive strength multiplier is the multiplication between the two drive strength select registers.</description>
     <addressOffset>0xB0</addressOffset>
     <fields>
      <field>
       <name>GPIO_DS_SEL0</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>1X</name>
         <description>1 x GPIO_DS_SEL1 = total drive strength multiplier.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>2X</name>
         <description>2 x GPIO_DS_SEL1 = total drive strength multiplier.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>DS_SEL1</name>
     <description>GPIO Drive Strength 1 Register. Each bit in this register selects the drive strength for the associated GPIO pin in this port. Refer to the Datasheet for sink/source current of GPIO pins in each mode. The total drive strength multiplier is the multiplication between the two drive strength select registers.</description>
     <addressOffset>0xB4</addressOffset>
     <fields>
      <field>
       <name>GPIO_DS_SEL1</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>1X</name>
         <description>1 x GPIO_DS_SEL0 = total drive strength multiplier.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>4X</name>
         <description>4 x GPIO_DS_SEL0 = total drive strength multiplier.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PSSEL</name>
     <description>GPIO Pull Select Mode.</description>
     <addressOffset>0xB8</addressOffset>
     <fields>
      <field>
       <name>GPIO_PSSEL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>WEAK_PDPU</name>
         <description>1MOhm Pull-Up/Down resistor connected to the input pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>STRONG_PDPU</name>
         <description>25KOhm Pull-Up/Down resistor connected to the input pin.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>VSSEL</name>
     <description>GPIO Voltage Select.</description>
     <addressOffset>0xC0</addressOffset>
     <fields>
      <field>
       <name>GPIO_VSSEL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>VDDIO</name>
         <description>Vddio set as the pin's supply voltage.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>VDDIOH</name>
         <description>Vddioh set as the pin's supply voltage.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--GPIO0 Individual I/O for each GPIO-->
  <peripheral>
   <name>TMR0</name>
   <description>32-bit reloadable timer that can be used for timing and event counting.</description>
   <groupName>Timers</groupName>
   <baseAddress>0x40010000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>TMR0</name>
    <description>TMR0 IRQ</description>
    <value>5</value>
   </interrupt>
   <registers>
    <register>
     <name>CNT</name>
     <description>Count.  This register stores the current timer count.</description>
     <addressOffset>0x00</addressOffset>
     <resetValue>0x00000001</resetValue>
     <fields>
      <field>
       <name>COUNT</name>
       <description>Current count on the timer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CMP</name>
     <description>Compare.  This register stores the compare value, which is used to set the maximum count value to initiate a reload of the timer to 0x0001.</description>
     <addressOffset>0x04</addressOffset>
     <resetValue>0x0000FFFF</resetValue>
     <fields>
      <field>
       <name>COMPARE</name>
       <description>Timer compare value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PWM</name>
     <description>PWM.  This register stores the value that is compared to the current timer count.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>PWM</name>
       <description>Timer PWM match value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INTR</name>
     <description>Clear Interrupt. Writing a value (0 or 1) to a bit in this register clears the associated interrupt.</description>
     <addressOffset>0x0C</addressOffset>
     <modifiedWriteValues>oneToClear</modifiedWriteValues>
     <fields>
      <field>
       <name>IRQ</name>
       <description>Clear Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CN</name>
     <description>Timer Control Register.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>TMODE</name>
       <description>Timer Mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>oneshot</name>
         <description>One Shot Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>continuous</name>
         <description>Continuous Mode.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>counter</name>
         <description>Counter Mode.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pwm</name>
         <description>PWM Mode.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>capture</name>
         <description>Capture Mode.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>compare</name>
         <description>Compare Mode.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>gated</name>
         <description>Gated Mode.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>capturecompare</name>
         <description>Capture/Compare Mode.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PRES</name>
       <description>Prescaler.  Set the Timer's prescaler value. The prescaler divides the PCLK input to the timer and sets the Timer's Count Clock, F_CNT_CLK = PCLK (HZ) /prescaler. The Timer's prescaler setting is a 4-bit value with pres3:pres[2:0].</description>
       <bitOffset>3</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div1</name>
         <description>Divide by 1.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2</name>
         <description>Divide by 2.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div4</name>
         <description>Divide by 4.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div8</name>
         <description>Divide by 8.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div16</name>
         <description>Divide by 16.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div32</name>
         <description>Divide by 32.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div64</name>
         <description>Divide by 64.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div128</name>
         <description>Divide by 128.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div256</name>
         <description>Divide by 256. Additionally, TMRn-&gt;cn.pres3 must be set.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div512</name>
         <description>Divide by 512. Additionally, TMRn-&gt;cn.pres3 must be set.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div1024</name>
         <description>Divide by 1024. Additionally, TMRn-&gt;cn.pres3 must be set.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2048</name>
         <description>Divide by 2048. Additionally, TMRn-&gt;cn.pres3 must be set.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div4096</name>
         <description>Divide by 4096. Additionally, TMRn-&gt;cn.pres3 must be set.</description>
         <value>5</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TPOL</name>
       <description>Timer input/output polarity bit.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>activeHi</name>
         <description>Active High.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>activeLo</name>
         <description>Active Low.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TEN</name>
       <description>Timer Enable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PRES3</name>
       <description>MSB of prescaler value.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div1</name>
         <description>Divide by 1.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2</name>
         <description>Divide by 2.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div4</name>
         <description>Divide by 4.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div8</name>
         <description>Divide by 8.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div16</name>
         <description>Divide by 16.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div32</name>
         <description>Divide by 32.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div64</name>
         <description>Divide by 64.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div128</name>
         <description>Divide by 128.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div256</name>
         <description>Divide by 256. Additionally, TMRn-&gt;cn.pres3 must be set.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div512</name>
         <description>Divide by 512. Additionally, TMRn-&gt;cn.pres3 must be set.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div1024</name>
         <description>Divide by 1024. Additionally, TMRn-&gt;cn.pres3 must be set.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2048</name>
         <description>Divide by 2048. Additionally, TMRn-&gt;cn.pres3 must be set.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div4096</name>
         <description>Divide by 4096. Additionally, TMRn-&gt;cn.pres3 must be set.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PWMSYNC</name>
       <description>Timer PWM Synchronization Mode Enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NOLHPOL</name>
       <description>Timer PWM output 0A polarity bit.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal output polarity.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>invert</name>
         <description>Inverted output polarity.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NOLLPOL</name>
       <description>Timer PWM output 0A' polarity bit.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal output polarity.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>invert</name>
         <description>Inverted output polarity.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PWMCKBD</name>
       <description>Timer PWM output 0A Mode Disable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>NOLCMP</name>
     <description>Timer Non-Overlapping Compare Register.</description>
     <addressOffset>0x14</addressOffset>
     <fields>
      <field>
       <name>NOLLCMP</name>
       <description>Non-overlapping Low Compare.  The 8-bit timer count value of non-overlapping time between falling edge of PWM output 0A and next rising edge of PWM output 0A'.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>NOLHCMP</name>
       <description>Non-overlapping High Compare.  The 8-bit timer count value of non-overlapping time between falling edge of PWM output 0A' and next rising edge of PWM output 0A.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--TMR0 32-bit reloadable timer that can be used for timing and event counting.-->
  <peripheral derivedFrom="TMR0">
   <name>TMR1</name>
   <description>32-bit reloadable timer that can be used for timing and event counting. 1</description>
   <baseAddress>0x40011000</baseAddress>
   <interrupt>
    <name>TMR1</name>
    <description>TMR1 IRQ</description>
    <value>6</value>
   </interrupt>
  </peripheral>
<!--TMR1 32-bit reloadable timer that can be used for timing and event counting. 1-->
  <peripheral derivedFrom="TMR0">
   <name>TMR2</name>
   <description>32-bit reloadable timer that can be used for timing and event counting. 2</description>
   <baseAddress>0x40012000</baseAddress>
   <interrupt>
    <name>TMR2</name>
    <description>TMR2 IRQ</description>
    <value>7</value>
   </interrupt>
  </peripheral>
<!--TMR2 32-bit reloadable timer that can be used for timing and event counting. 2-->
  <peripheral>
   <name>I2C0</name>
   <description>Inter-Integrated Circuit.</description>
   <groupName>I2C</groupName>
   <baseAddress>0x4001D000</baseAddress>
   <size>32</size>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>I2C0</name>
    <description>I2C0 IRQ</description>
    <value>13</value>
   </interrupt>
   <registers>
    <register>
     <name>CTRL</name>
     <description>Control Register0.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>EN</name>
       <description>I2C Enable.</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable I2C.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enable I2C.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MST_MODE</name>
       <description>Master Mode Enable.</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>slave_mode</name>
         <description>Slave Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>master_mode</name>
         <description>Master Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GC_ADDR_EN</name>
       <description>General Call Address Enable.</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Ignore Gneral Call Address.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Acknowledge general call address.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IRXM_EN</name>
       <description>Interactive Receive Mode.</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable Interactive Receive Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable Interactive Receive Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IRXM_ACK</name>
       <description>Data Acknowledge. This bit defines the acknowledge bit returned by the I2C receiver while IRXM = 1 HW forces ACK to 0 when IRXM = 0.</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>ack</name>
         <description>return ACK (pulling SDA LOW).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>nack</name>
         <description>return NACK (leaving SDA HIGH).</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCL_OUT</name>
       <description>SCL Output. This bits control SCL output when SWOE =1.</description>
       <bitRange>[6:6]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>drive_scl_low</name>
         <description>Drive SCL low. </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>release_scl</name>
         <description>Release SCL.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SDA_OUT</name>
       <description>SDA Output. This bits control SDA output when SWOE = 1. </description>
       <bitRange>[7:7]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>drive_sda_low</name>
         <description>Drive SDA low. </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>release_sda</name>
         <description>Release SDA.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCL</name>
       <description>SCL status. This bit reflects the logic gate of SCL signal. </description>
       <bitRange>[8:8]</bitRange>
       <access>read-only</access>
      </field>
      <field>
       <name>SDA</name>
       <description>SDA status. THis bit reflects the logic gate of SDA signal.</description>
       <bitRange>[9:9]</bitRange>
       <access>read-only</access>
      </field>
      <field>
       <name>BB_MODE</name>
       <description>Software Output Enable.</description>
       <bitRange>[10:10]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>outputs_disable</name>
         <description>I2C Outputs SCLO and SDAO disabled. </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>outputs_enable</name>
         <description>I2C Outputs SCLO and SDAO enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>READ</name>
       <description>Read. This bit reflects the R/W bit of an address match (AMI = 1) or general call match (GCI = 1). This bit is valid 3 cycles after the relevant interrupt bit is set.</description>
       <bitRange>[11:11]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>write</name>
         <description>Write.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>read</name>
         <description>Read.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CLKSTR_DIS</name>
       <description>This bit will disable slave clock stretching when set.</description>
       <bitRange>[12:12]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Slave clock stretching enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Slave clock stretching disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ONE_MST_MODE</name>
       <description>SCL Push-Pull Mode. This bit controls whether SCL is operated in a the I2C standard open-drain mode, or in a non-standard push-pull mode where the Hi-Z output isreplaced with Drive-1. The non-standard mode should only be used when operating as a master and communicating with slaves that are guaranteed to never drive SCL low. </description>
       <bitRange>[13:13]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Standard open-drain operation:
					drive low for 0, Hi-Z for 1</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Non-standard push-pull operation:
					drive low for 0, drive high for 1</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HS_EN</name>
       <description>High speed mode enable</description>
       <bitRange>[15:15]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>STATUS</name>
     <description>Status Register.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>BUSY</name>
       <description>Bus Status.</description>
       <bitRange>[0:0]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>I2C Bus Idle.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>I2C Bus Busy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_EM</name>
       <description>RX empty.</description>
       <bitRange>[1:1]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_empty</name>
         <description>Not Empty.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>empty</name>
         <description>Empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>RX Full.</description>
       <bitRange>[2:2]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_full</name>
         <description>Not Full.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>full</name>
         <description>Full.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EM</name>
       <description>TX Empty.</description>
       <bitRange>[3:3]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_empty</name>
         <description>Not Empty.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>empty</name>
         <description>Empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FULL</name>
       <description>TX Full.</description>
       <bitRange>[4:4]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_empty</name>
         <description>Not Empty.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>empty</name>
         <description>Empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MST_BUSY</name>
       <description>Clock Mode.</description>
       <bitRange>[5:5]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_actively_driving_scl_clock</name>
         <description>Device not actively driving SCL clock cycles.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>actively_driving_scl_clock</name>
         <description>Device operating as master and actively driving SCL clock cycles.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTFL0</name>
     <description>Interrupt Status Register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>DONE</name>
       <description>Transfer Done Interrupt.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <name>INT_FL0_Done</name>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IRXM</name>
       <description>Interactive Receive Interrupt.</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GC_ADDR_MATCH</name>
       <description>Slave General Call Address Match Interrupt.</description>
       <bitRange>[2:2]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR_MATCH</name>
       <description>Slave Address Match Interrupt.</description>
       <bitRange>[3:3]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THD</name>
       <description>Receive Threshold Interrupt. This bit is automaticcaly cleared when RX_FIFO is below the threshold level.</description>
       <bitRange>[4:4]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending. RX_FIFO equal or more bytes than the threshold.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_THD</name>
       <description>Transmit Threshold Interrupt. This bit is automaticcaly cleared when TX_FIFO is above the threshold level.</description>
       <bitRange>[5:5]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending. TX_FIFO has equal or less bytes than the threshold.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOP</name>
       <description>STOP Interrupt.</description>
       <bitRange>[6:6]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending. TX_FIFO has equal or less bytes than the threshold.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR_ACK</name>
       <description>Address Acknowledge Interrupt.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ARB_ERR</name>
       <description>Arbritation error Interrupt.</description>
       <bitRange>[8:8]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TO_ERR</name>
       <description>timeout Error Interrupt.</description>
       <bitRange>[9:9]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR_NACK_ERR</name>
       <description>Address NACK Error Interrupt.</description>
       <bitRange>[10:10]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATA_ERR</name>
       <description>Data NACK Error Interrupt.</description>
       <bitRange>[11:11]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DNR_ERR</name>
       <description>Do Not Respond Error Interrupt.</description>
       <bitRange>[12:12]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>START_ERR</name>
       <description>Start Error Interrupt.</description>
       <bitRange>[13:13]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOP_ERR</name>
       <description>Stop Error Interrupt.</description>
       <bitRange>[14:14]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_LOCKOUT</name>
       <description>Transmit Lock Out Interrupt.</description>
       <bitRange>[15:15]</bitRange>
      </field>
      <field>
       <name>MAMI</name>
       <description>Multiple Address Match Interrupt</description>
       <bitRange>[21:16]</bitRange>
      </field>
      <field>
       <name>RD_ADDR_MATCH</name>
       <description>Slave Read Address Match Interrupt</description>
       <bitRange>[22:22]</bitRange>
      </field>
      <field>
       <name>WR_ADDR_MATCH</name>
       <description>Slave Write Address Match Interrupt</description>
       <bitRange>[23:23]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>INTEN0</name>
     <description>Interrupt Enable Register.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>DONE</name>
       <description>Transfer Done Interrupt Enable.</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when DONE = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IRXM</name>
       <description>Description not available.</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when RX_MODE = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GC_ADDR_MATCH</name>
       <description>Slave mode general call address match received input enable.</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when GEN_CTRL_ADDR = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR_MATCH</name>
       <description>Slave mode incoming address match interrupt.</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when ADDR_MATCH = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THD</name>
       <description>RX FIFO Above Treshold Level Interrupt Enable.</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_THD</name>
       <description>TX FIFO Below Treshold Level Interrupt Enable.</description>
       <bitRange>[5:5]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOP</name>
       <description>Stop Interrupt Enable</description>
       <bitRange>[6:6]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when STOP = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR_ACK</name>
       <description>Received Address ACK from Slave Interrupt.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ARB_ERR</name>
       <description>Master Mode Arbitration Lost Interrupt.</description>
       <bitRange>[8:8]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TO_ERR</name>
       <description>Timeout Error Interrupt Enable.</description>
       <bitRange>[9:9]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR_NACK_ERR</name>
       <description>Master Mode Address NACK Received Interrupt.</description>
       <bitRange>[10:10]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATA_ERR</name>
       <description>Master Mode Data NACK Received Interrupt.</description>
       <bitRange>[11:11]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DNR_ERR</name>
       <description>Slave Mode Do Not Respond Interrupt.</description>
       <bitRange>[12:12]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>START_ERR</name>
       <description>Out of Sequence START condition detected interrupt.</description>
       <bitRange>[13:13]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOP_ERR</name>
       <description>Out of Sequence STOP condition detected interrupt.</description>
       <bitRange>[14:14]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_LOCKOUT</name>
       <description>TX FIFO Locked Out Interrupt.</description>
       <bitRange>[15:15]</bitRange>
      </field>
      <field>
       <name>MAMI</name>
       <description>Multiple Address Match Interrupt</description>
       <bitRange>[21:16]</bitRange>
      </field>
      <field>
       <name>RD_ADDR_MATCH</name>
       <description>Slave Read Address Match Interrupt</description>
       <bitRange>[22:22]</bitRange>
      </field>
      <field>
       <name>WR_ADDR_MATCH</name>
       <description>Slave Write Address Match Interrupt</description>
       <bitRange>[23:23]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>INTFL1</name>
     <description>Interrupt Status Register 1.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>RX_OV</name>
       <description>Receiver Overflow Interrupt. When operating as a slave receiver, this bit is set when you reach the first data bit and the RX FIFO and shift register are both full.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_UN</name>
       <description>Transmit Underflow Interrupt. When operating as a slave transmitter, this bit is set when you reach the first data bit and the TX FIFO is empty and the master is still asking for more data (i.e the master hasn't sent a NACK yet).</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>START</name>
       <description>START Condition Status Flag.</description>
       <bitRange>[2:2]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>INTEN1</name>
     <description>Interrupt Staus Register 1.</description>
     <addressOffset>0x14</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>RX_OV</name>
       <description>Receiver Overflow Interrupt Enable.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_UN</name>
       <description>Transmit Underflow Interrupt Enable.</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>START</name>
       <description>START Condition Interrupt Enable.</description>
       <bitRange>[2:2]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFOLEN</name>
     <description>FIFO Configuration Register.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>RX_DEPTH</name>
       <description>Receive FIFO Length.</description>
       <bitRange>[7:0]</bitRange>
       <access>read-only</access>
      </field>
      <field>
       <name>TX_DEPTH</name>
       <description>Transmit FIFO Length.</description>
       <bitRange>[15:8]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>RXCTRL0</name>
     <description>Receive Control Register 0.</description>
     <addressOffset>0x1C</addressOffset>
     <fields>
      <field>
       <name>DNR</name>
       <description>Do Not Respond.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>respond</name>
         <description>Always respond to address match.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>not_respond_rx_fifo_empty</name>
         <description>Do not respond to address match when RX_FIFO is not empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FLUSH</name>
       <description>Receive FIFO Flush. This bit is automatically cleared to 0 after the operation. Setting this bit to 1 will affect RX_FIFO status.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_flushed</name>
         <description>FIFO not flushed.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flush</name>
         <description>Flush RX_FIFO.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>THD_LVL</name>
       <description>Receive FIFO Threshold. These bits define the RX_FIFO interrupt threshold.</description>
       <bitRange>[11:8]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>RXCTRL1</name>
     <description>Receive Control Register 1.</description>
     <addressOffset>0x20</addressOffset>
     <fields>
      <field>
       <name>CNT</name>
       <description>Receive Count Bits. These bits define the number of bytes to be received in a transaction, except for the case RXCNT = 0. RXCNT = 0 means 256 bytes to be received in a transaction.</description>
       <bitRange>[7:0]</bitRange>
      </field>
      <field>
       <name>LVL</name>
       <description>Receive FIFO Count. These bits reflect the number of byte in the RX_FIFO. These bits are flushed when I2CEN = 0.</description>
       <bitRange>[11:8]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>TXCTRL0</name>
     <description>Transmit Control Register 0.</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>PRELOAD_MODE</name>
       <description>Transmit FIFO Preaload Mode. Setting this bit will allow for high speed application to preload the transmit FIFO prior to Slave Address Match.</description>
       <bitRange>[0:0]</bitRange>
      </field>
      <field>
       <name>TX_READY_MODE</name>
       <description>Transmit FIFO Ready Manual Mode.</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>HW control of I2CTXRDY enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>HW control of I2CTXRDY disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GC_ADDR_FLUSH_DIS</name>
       <description>TX FIFO General Call Address Match Auto Flush Disable.</description>
       <bitRange>[2:2]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WR_ADDR_FLUSH_DIS</name>
       <description>TX FIFO Slave Address Match Write Auto Flush Disable.</description>
       <bitRange>[3:3]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RD_ADDR_FLUSH_DIS</name>
       <description>TX FIFO Slave Address Match Read Auto Flush Disable.</description>
       <bitRange>[4:4]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NACK_FLUSH_DIS</name>
       <description>TX FIFO received NACK Auto Flush Disable.</description>
       <bitRange>[5:5]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FLUSH</name>
       <description>Transmit FIFO Flush. This bit is automatically cleared to 0 after the operation.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_flushed</name>
         <description>FIFO not flushed.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flush</name>
         <description>Flush TX_FIFO.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>THD_LVL</name>
       <description>Transmit FIFO Threshold. These bits define the TX_FIFO interrupt threshold.</description>
       <bitRange>[11:8]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>TXCTRL1</name>
     <description>Transmit Control Register 1.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>PRELOAD_RDY</name>
       <description>Transmit FIFO Preload Ready.</description>
       <bitRange>[0:0]</bitRange>
      </field>
      <field>
       <name>LVL</name>
       <description>Transmit FIFO Count. These bits reflect the number of bytes in the TX_FIFO.</description>
       <bitRange>[11:8]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO</name>
     <description>Data Register.</description>
     <addressOffset>0x2C</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data is read from or written to this location. Transmit and receive FIFO are separate but both are addressed at this location.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MSTCTRL</name>
     <description>Master Control Register.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>START</name>
       <description>Setting this bit to 1 will start a master transfer.</description>
       <bitRange>[0:0]</bitRange>
      </field>
      <field>
       <name>RESTART</name>
       <description>Setting this bit to 1 will generate a repeated START.</description>
       <bitRange>[1:1]</bitRange>
      </field>
      <field>
       <name>STOP</name>
       <description>Setting this bit to 1 will generate a STOP condition.</description>
       <bitRange>[2:2]</bitRange>
      </field>
      <field>
       <name>EX_ADDR_EN</name>
       <description>Slave Extend Address Select.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>7_bits_address</name>
         <description>7-bit address.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>10_bits_address</name>
         <description>10-bit address.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CLKLO</name>
     <description>Clock Low Register.</description>
     <addressOffset>0x34</addressOffset>
     <fields>
      <field>
       <name>LO</name>
       <description>Clock low. In master mode, these bits define the SCL low period. In slave mode, these bits define the time SCL will be held low after data is outputted.</description>
       <bitRange>[8:0]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>CLKHI</name>
     <description>Clock high Register.</description>
     <addressOffset>0x38</addressOffset>
     <fields>
      <field>
       <name>HI</name>
       <description>Clock High. In master mode, these bits define the SCL high period.</description>
       <bitRange>[8:0]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>HSCLK</name>
     <description>Clock high Register.</description>
     <addressOffset>0x3C</addressOffset>
     <fields>
      <field>
       <name>LO</name>
       <description>Clock Low. This field sets the Hs-Mode clock low count. In Slave mode, this is the time SCL is held low after data is output on SDA.</description>
       <bitRange>[7:0]</bitRange>
      </field>
      <field>
       <name>HI</name>
       <description>Clock High. This field sets the Hs-Mode clock high count. In Slave mode, this is the time SCL is held high after data is output on SDA</description>
       <bitRange>[15:8]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>TIMEOUT</name>
     <description>Timeout Register</description>
     <addressOffset>0x40</addressOffset>
     <fields>
      <field>
       <name>SCL_TO_VAL</name>
       <description>Timeout</description>
       <bitRange>[15:0]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA</name>
     <description>DMA Register.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>TX_EN</name>
       <description>TX channel enable.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_EN</name>
       <description>RX channel enable.</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SLAVE</name>
     <description>Slave Address Register.</description>
     <addressOffset>0x4C</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Slave Address.</description>
       <bitRange>[9:0]</bitRange>
      </field>
      <field>
       <name>EXT_ADDR_EN</name>
       <description>Extended Address Select.</description>
       <bitRange>[15:15]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>7_bits_address</name>
         <description>7-bit address.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>10_bits_address</name>
         <description>10-bit address.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--I2C0 Inter-Integrated Circuit.-->
  <peripheral derivedFrom="I2C0">
   <name>I2C1</name>
   <description>Inter-Integrated Circuit. 1</description>
   <baseAddress>0x4001E000</baseAddress>
   <interrupt>
    <name>I2C1</name>
    <description>I2C1 IRQ</description>
    <value>36</value>
   </interrupt>
  </peripheral>
<!--I2C1 Inter-Integrated Circuit. 1-->
  <peripheral>
   <name>FLC</name>
   <description>Flash Memory Control.</description>
   <prependToName>FLSH_</prependToName>
   <baseAddress>0x40029000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>Flash_Controller</name>
    <description>Flash Controller interrupt.</description>
    <value>23</value>
   </interrupt>
   <registers>
    <register>
     <name>ADDR</name>
     <description>Flash Write Address.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Address for next operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CLKDIV</name>
     <description>Flash Clock Divide. The clock (PLL0) is divided by this value to generate a 1 MHz clock for Flash controller.</description>
     <addressOffset>0x04</addressOffset>
     <resetValue>0x00000064</resetValue>
     <fields>
      <field>
       <name>CLKDIV</name>
       <description>Flash Clock Divide. The clock is divided by this value to generate a 1MHz clock for flash controller.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL</name>
     <description>Flash Control Register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>WRITE</name>
       <description>Write.  This bit is automatically cleared after the operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start_wr</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MASS_ERASE</name>
       <description>Mass Erase.  This bit is automatically cleared after the operation.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start_me</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PAGE_ERASE</name>
       <description>Page Erase.  This bit is automatically cleared after the operation.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start_pge</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WIDTH</name>
       <description>This field sets the width of a write to the flash page. Select between 128-bit (default) and 32-bit.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>128_bit</name>
         <description>Flash is written to in 128-bit increments.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>32_bit</name>
         <description>Flash is written to in 32-bit increments.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ERASE_CODE</name>
       <description>Erase Code.  The ERASE_CODE must be set up property before erase operation can be initiated. These bits are automatically cleared after the operation is complete.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Flash erases disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pge</name>
         <description>Enable Page Erase.</description>
         <value>0x55</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>me</name>
         <description>Enable Mass Erase. The debug port must be enabled.</description>
         <value>0xAA</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BUSY</name>
       <description>Flash Pending.  When Flash operation is in progress (busy), Flash reads and writes will fail. When PEND is set, write to all Flash registers, with exception of the Flash interrupt register, are ignored.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>Idle.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Busy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>UNLOCK_CODE</name>
       <description>Flash Unlock.  The correct unlock code must be written to these four bits before any Flash write or erase operation is allowed.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>unlocked</name>
         <description>Flash Unlocked.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>locked</name>
         <description>Flash Locked.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTR</name>
     <description>Flash Interrupt Register.</description>
     <addressOffset>0x024</addressOffset>
     <fields>
      <field>
       <name>DONE</name>
       <description>Flash Done Interrupt.  This bit is set to 1 upon Flash write or erase completion.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ACCESS_FAIL</name>
       <description>Flash Access Fail.  This bit is set when an attempt is made to write the flash while the flash is busy or the flash is locked. This bit can only be set to 1 by hardware.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noerr</name>
         <description>No Failure.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>error</name>
         <description>Failure occurs.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DONE_IE</name>
       <description>Flash Done Interrupt Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ACCESS_FAIL_IE</name>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <dimIndex>0,1,2,3</dimIndex>
     <name>DATA</name>
     <description>Flash Write Data.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data next operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ACTNL</name>
     <description>Access Control Register. Writing the ACNTL register with the following values in the order shown, allows read and write access to the system and user Information block: pflc-acntl = 0x3a7f5ca3; pflc-acntl = 0xa1e34f20; pflc-acntl = 0x9608b2c1. When unlocked, a write of any word will disable access to system and user information block. Readback of this register is always zero.</description>
     <addressOffset>0x40</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>ACNTL</name>
       <description>Access control.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--FLC Flash Memory Control.-->
  <peripheral>
   <name>ICC0</name>
   <description>Instruction Cache Controller Registers</description>
   <baseAddress>0x4002A000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>CACHE_ID</name>
     <description>Cache ID Register.</description>
     <addressOffset>0x0000</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>RELNUM</name>
       <description>Release Number. Identifies the RTL release version.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>PARTNUM</name>
       <description>Part Number. This field reflects the value of C_ID_PART_NUMBER configuration parameter.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>CCHID</name>
       <description>Cache ID. This field reflects the value of the C_ID_CACHEID configuration parameter.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MEM_SIZE</name>
     <description>Memory Configuration Register.</description>
     <addressOffset>0x0004</addressOffset>
     <access>read-only</access>
     <resetValue>0x00080008</resetValue>
     <fields>
      <field>
       <name>CCHSZ</name>
       <description>Cache Size. Indicates total size in Kbytes of cache.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
      <field>
       <name>MEMSZ</name>
       <description>Main Memory Size. Indicates the total size, in units of 128 Kbytes, of code memory accessible to the cache controller.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CACHE_CTRL</name>
     <description>Cache Control and Status Register.</description>
     <addressOffset>0x0100</addressOffset>
     <fields>
      <field>
       <name>ENABLE</name>
       <description>Cache Enable. Controls whether the cache is bypassed or is in use. Changing the state of this bit will cause the instruction cache to be flushed and its contents invalidated.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Cache Bypassed. Instruction data is stored in the line fill buffer but is not written to main cache memory array.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Cache Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>READY</name>
       <description>Cache Ready flag. Cleared by hardware when at any time the cache as a whole is invalidated (including a system reset). When this bit is 0, the cache is effectively in bypass mode (instruction fetches will come from main memory or from the line fill buffer). Set by hardware when the invalidate operation is complete and the cache is ready.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>notReady</name>
         <description>Not Ready.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INVALIDATE</name>
     <description>Invalidate All Registers.</description>
     <addressOffset>0x0700</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>INVALID</name>
       <description>Invalidate.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--ICC0 Instruction Cache Controller Registers-->
  <peripheral>
   <name>UART0</name>
   <description>UART</description>
   <baseAddress>0x40042000</baseAddress>
   <addressBlock>
    <offset>0</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>UART0</name>
    <description>UART0 IRQ</description>
    <value>14</value>
   </interrupt>
   <registers>
    <register>
     <name>CTRL0</name>
     <description>Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>ENABLE</name>
       <description>UART enabled, to enable UART block, it is used to drive a gated clock in order to save power consumption when UART is not used. FIFOs are flushed when UART is disabled.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>UART disabled. FIFOs are flushed. Clock is gated off for power savings. </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>UART enabled. </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PARITY_EN</name>
       <description>Enable/disable Parity bit (9th character).</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>No Parity </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Parity enabled as 9th bit</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PARITY_MODE</name>
       <description>When PARITY_EN=1, selects odd, even, Mark or Space parity.
                Mark parity = always 1;

                Space parity = always 0.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>even</name>
         <description>Even parity selected.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>odd</name>
         <description>Odd parity selected.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>mark</name>
         <description>Mark parity selected.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>space</name>
         <description>Space parity selected.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PARITY_LVL</name>
       <description>Selects parity based on 1s or 0s count (when PARITY_EN=1).</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ZERO</name>
         <description>Parity calculation is based on number of 0s in frame.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ONE</name>
         <description>Parity calculation is based on number of 1s in frame.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXFLUSH</name>
       <description>Flushes the TX FIFO buffer.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No flush operation in progress/no effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flush</name>
         <description>TX FIFO flush initiation or flush operation currently in progress.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXFLUSH</name>
       <description>Flushes the RX FIFO buffer.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No flush operation in progress/no effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flush</name>
         <description>RX FIFO flush initiation or flush operation currently in progress.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BITACC</name>
       <description>If set, bit accuracy is selected, in this case the bit duration is the same for all the bits with the optimal accuracy. But the frame duration can have a significant deviation from the expected baudrate.If clear, frame accuracy is selected, therefore bits can have different duration in order to guarantee the minimum frame deviation.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>frame</name>
         <description>Frame accuracy.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>bit</name>
         <description>Bit accuracy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SIZE</name>
       <description>Selects UART character size.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>5bit_data</name>
         <description>5 bits.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>6bit_data</name>
         <description>6 bits.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>7bit_data</name>
         <description>7 bits.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8bit_data</name>
         <description>8 bits.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOP</name>
       <description>Selects the number of stop bits that will be generated.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>1_stopbits</name>
         <description>1 stop bit.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>2_stopbits</name>
         <description>1.5 stop bits if the character size is 5, 2 stop bits for all other character sizes.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FLOW</name>
       <description>Enables/disables hardware flow control.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>HW Flow Control disabled</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>HW Flow Control with RTS/CTS enabled</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FLOWPOL</name>
       <description>RTS/CTS polarity.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active_low</name>
         <description>RTS/CTS asserted is logic 0.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>active_high</name>
         <description>RTS/CTS asserted is logic 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NULLMOD</name>
       <description>NULL Modem Support (RTS/CTS and TXD/RXD swap).</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Direct convention.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>swapped</name>
         <description>Null Modem Mode. RTS/CTS swapped and TX/RX swapped.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BREAK</name>
       <description>Break control bit. It causes a break condition to be transmitted to receiving UART.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Break characters are not generated.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>break</name>
         <description>Break characters are sent (all the bits are at '0' including start/parity/stop).</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CLK_SEL</name>
       <description>Baud Rate Clock Source Select.  Selects the baud rate clock.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>periph_clk</name>
         <description>System clock.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>alt_clk</name>
         <description>Alternate 7.3727MHz internal clock.  Useful in low power modes when the system clock is slow.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TO_CNT</name>
       <description>RX Time Out. RX time out interrupt will occur after TO_CNT Uart
                       characters if RX-FIFO is not empty and RX FIFO has not been read.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL1</name>
     <description>Threshold Control register.</description>
     <addressOffset>0x04</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>RX_FIFO_LVL</name>
       <description>RX FIFO Threshold Level.When the RX FIFO reaches this many bytes or higher, UARTn_INFTL.rx_fifo_level is set.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>TX_FIFO_LVL</name>
       <description>TX FIFO Threshold Level. When the TX FIFO reaches this many bytes or higher, UARTn_INTFL.tx_fifo_level is set.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>RTS_FIFO_LVL</name>
       <description>RTS threshold control. When the RX FIFO reaches this many bytes or higher, the RTS output signal is deasserted, informing the transmitting UART to stop sending data to this UART.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>STAT</name>
     <description>Status Register.</description>
     <addressOffset>0x08</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>TX_BUSY</name>
       <description>Read-only flag indicating the UART transmit status.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>The UART block is not currently transmitting chracters.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>UART block currently transmitting chracters.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_BUSY</name>
       <description>Read-only flag indicating the UARTreceiver status.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>The UART block is not currently receiving chracters.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>UART block currently receiving chracters.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PARITY</name>
       <description>9th Received bit state. This bit identifies the state of the 9th bit of received data. Only available for UART_CTRL.SIZE[1:0]=3.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>0</name>
         <description>Received a parity bit of 0.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1</name>
         <description>Received a parity bit of 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BREAK</name>
       <description>Received BREAK status. BREAKS is cleared when UART_STAT register is read. Received data input is held in spacing (logic 0) state for longer than a full word transmission time (that is, the total time of Start bit + data bits + Parity + Stop bits).</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>recv</name>
         <description>Break frame received.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_EMPTY</name>
       <description>Read-only flag indicating the RX FIFO state.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>empty</name>
         <description>RX FIFO empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Read-only flag indicating the RX FIFO state.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>full</name>
         <description>RX FIFO full.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>Read-only flag indicating the TX FIFO state.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>empty</name>
         <description>TX FIFO empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FULL</name>
       <description>Read-only flag indicating the TX FIFO state.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>full</name>
         <description>TX FIFO empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_NUM</name>
       <description>Indicates the number of bytes currently in the RX FIFO.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>6</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TX_NUM</name>
       <description>Indicates the number of bytes currently in the TX FIFO.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>6</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RX_TO</name>
       <description>Receiver Timeout Status. Indicates if timeout has occurred.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>expired</name>
         <description>RX timeout has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>Interrupt Enable Register.</description>
     <addressOffset>0x0C</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>RX_FRAME_ERROR</name>
       <description>Enable for RX Frame Error Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>RX Frame error interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>RX Frame error interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_PARITY_ERROR</name>
       <description>Enable for RX Parity Error interrupt.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>RX Parity error interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>RX Parity error interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CTS</name>
       <description>Enable for CTS signal change interrupt.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>CTS State Change interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>CTS State Change interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_OVERRUN</name>
       <description>Enable for RX FIFO OVerrun interrupt.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>RX Overrun interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>RX Overrun interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_LVL</name>
       <description>Enable for interrupt when RX FIFO reaches the number of bytes configured by the RXTHD field.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>RX FIFO Threshold Level interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>RX FIFO Threshold Level interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_AE</name>
       <description>Enable for interrupt when TX FIFO has only one byte remaining.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>TX FIFO One byte remaining (almost empty) interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>TX FIFO one byte remaining (almost empty) interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_LVL</name>
       <description>Enable for interrupt when TX FIFO reaches the number of bytes configured by the TXTHD field.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>TX FIFO Threshold Level interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>TX FIFO Threshold Level interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BREAK</name>
       <description>Enable for received BREAK character interrupt.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description> Break character received interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Break character recevied interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_TO</name>
       <description>Enable for RX Timeout Interrupt. Trigger if there is no RX communication during n UART characters (n=UART_CN.RXTO).</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>RX Timeout interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>RX Timeout interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LAST_BREAK</name>
       <description>Enable for Last break character interrupt.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Last break frame received interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Last break frame received interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_FL</name>
     <description>Interrupt Status Flags.</description>
     <addressOffset>0x10</addressOffset>
     <size>32</size>
     <modifiedWriteValues>oneToClear</modifiedWriteValues>
     <fields>
      <field>
       <name>FRAME</name>
       <description>FLAG for RX Frame Error Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Frame Error interrupt active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PARITY</name>
       <description>FLAG for RX Parity Error interrupt.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Receive parity error interrupt active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CTS_CHANGE</name>
       <description>FLAG for CTS signal change interrupt.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>CTS State change interrupt active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_OVR</name>
       <description>FLAG for RX FIFO Overrun interrupt.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RX Overrun interrupt active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_LVL</name>
       <description>FLAG for interrupt when RX FIFO reaches the number of bytes configured by the RXTHD field.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RX FIFO Threshold level interrupt active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_AE</name>
       <description>FLAG for interrupt when TX FIFO has only one byte remaining.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>TX FIFO one byte remaining interrupt active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_LVL</name>
       <description>FLAG for interrupt when TX FIFO reaches the number of bytes configured by the TXTHD field.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>TX FIFO threshold level interrupt active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BREAK</name>
       <description>FLAG for received BREAK character interrupt.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Break character received interrupt active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_TO</name>
       <description>FLAG for RX Timeout Interrupt. Trigger if there is no RX communication during n UART characters (n=UART_CN.RXTO).</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Receive timeout expired interrupt active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LAST_BREAK</name>
       <description>FLAG for Last break character interrupt.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Last break character received interrupt active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>BAUD0</name>
     <description>Baud rate register. Integer portion.</description>
     <addressOffset>0x14</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>IBAUD</name>
       <description>Integer portion of baud rate divisor value. IBAUD = InputClock / (factor * Baud Rate Frequency).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
      <field>
       <name>CLKDIV</name>
       <description>FACTOR must be chosen to have IDIV&gt;
                0. factor used in calculation = 128 &gt;
                &gt;
                FACTOR.
            </description>
       <bitOffset>16</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div128</name>
         <description>Baud Factor 128</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div64</name>
         <description>Baud Factor 64</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div32</name>
         <description>Baud Factor 32</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div16</name>
         <description>Baud Factor 16</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div8</name>
         <description>Baud Factor 8</description>
         <value>4</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>BAUD1</name>
     <description>Baud rate register. Decimal Setting.</description>
     <addressOffset>0x18</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>DBAUD</name>
       <description>Decimal portion of baud rate divisor value. DIV = InputClock/ (factor*Baud Rate Frequency). DDIV= (DIV-IDIV) *128.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>7</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO</name>
     <description>FIFO Data buffer.</description>
     <addressOffset>0x1C</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>FIFO</name>
       <description>Load/unload location for TX and RX FIFO buffers.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA</name>
     <description>DMA Configuration.</description>
     <addressOffset>0x20</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>TXDMA_EN</name>
       <description>TX DMA channel enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>DMA is disabled </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>DMA is enabled </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXDMA_EN</name>
       <description>RX DMA channel enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>DMA is disabled </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>DMA is enabled </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXDMA_LVL</name>
       <description>TX threshold for DMA transmission.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>RXDMA_LVL</name>
       <description>RX threshold for DMA transmission.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>TXFIFO</name>
     <description>Transmit FIFO Status register.</description>
     <addressOffset>0x24</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>DATA</name>
       <description>Reading from this field returns the next character available at the output of the TX FIFO (if one is available, otherwise 00h is returned).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>7</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--UART0 UART-->
  <peripheral derivedFrom="UART0">
   <name>UART1</name>
   <description>UART 1</description>
   <baseAddress>0x40043000</baseAddress>
   <interrupt>
    <name>UART1</name>
    <description>UART1 IRQ</description>
    <value>15</value>
   </interrupt>
  </peripheral>
<!--UART1 UART 1-->
  <peripheral>
   <name>SPI0</name>
   <description>SPI peripheral.</description>
   <baseAddress>0x400BE000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>SPI0</name>
    <value>56</value>
   </interrupt>
   <registers>
    <register>
     <name>FIFO32</name>
     <description>Register for reading and writing the FIFO.</description>
     <addressOffset>0x00</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>2</dim>
     <dimIncrement>2</dimIncrement>
     <name>FIFO16[%s]</name>
     <description>Register for reading and writing the FIFO.</description>
     <alternateRegister>DATA32</alternateRegister>
     <addressOffset>0x00</addressOffset>
     <size>16</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>1</dimIncrement>
     <name>FIFO8[%s]</name>
     <description>Register for reading and writing the FIFO.</description>
     <alternateRegister>DATA32</alternateRegister>
     <addressOffset>0x00</addressOffset>
     <size>8</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL0</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x04</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>SPI_EN</name>
       <description>SPI Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>SPI is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>SPI is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MM_EN</name>
       <description>Master Mode Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>SPI is Slave mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>SPI is  Master mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS_IO</name>
       <description>Slave Select 0, IO direction, to support Multi-Master mode,Slave Select 0 can be input in Master mode. This bit has no effect in slave mode.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>output</name>
         <description>Slave select 0 is output.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>input</name>
         <description>Slave Select 0 is input, only valid if MMEN=1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>START</name>
       <description>Start Transmit.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>start</name>
         <description>Master Initiates a transaction, this bit is self clearing when transactions are done. If a transaction cimpletes, and the TX FIFO is empty, the Master halts, if a transaction completes, and the TX FIFO is not empty, the Master initiates another transaction.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS_CTRL</name>
       <description>Start Select Control. Used in Master mode to control the behavior of the Slave Select signal at the end of a transaction.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>deassert</name>
         <description>SPI De-asserts Slave Select at the end of a transaction.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>assert</name>
         <description>SPI leaves Slave Select asserted at the end of a transaction.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS_SEL</name>
       <description>Slave Select, when in Master mode selects which Slave devices are selected. More than one Slave device can be selected.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SS0</name>
         <description>SS0 is selected.</description>
         <value>0x1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS1</name>
         <description>SS1 is selected.</description>
         <value>0x2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS2</name>
         <description>SS2 is selected.</description>
         <value>0x4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS3</name>
         <description>SS3 is selected.</description>
         <value>0x8</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL1</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_NUM_CHAR</name>
       <description>Nubmer of Characters to transmit.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
      <field>
       <name>RX_NUM_CHAR</name>
       <description>Nubmer of Characters to receive.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL2</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>CLK_PHA</name>
       <description>Clock Phase.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>risingEdge</name>
         <description>Data Sampled on clock rising edge. Use when in SPI Mode 0 and Mode 2 </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>fallingEdge</name>
         <description>Data Sampled on clock falling edge. Use when in SPI Mode 1 and Mode 3</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CLK_POL</name>
       <description>Clock Polarity.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Normal</name>
         <description>Normal Clock. Use when in SPI Mode 0 and Mode 1</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Inverted</name>
         <description>Inverted Clock. Use when in SPI Mode 2 and Mode 3</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NUM_BITS</name>
       <description>Number of Bits per character.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>16BITS</name>
         <description>16 bits per character.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1BITS</name>
         <description>1 bits per character.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>2BITS</name>
         <description>2 bits per character.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>3BITS</name>
         <description>3 bits per character.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>4BITS</name>
         <description>4 bits per character.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>5BITS</name>
         <description>5 bits per character.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>6BITS</name>
         <description>6 bits per character.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>7BITS</name>
         <description>7 bits per character.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8BITS</name>
         <description>8 bits per character.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>9BITS</name>
         <description>9 bits per character.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>10BITS</name>
         <description>10 bits per character.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>11BITS</name>
         <description>11 bits per character.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>12BITS</name>
         <description>12 bits per character.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>13BITS</name>
         <description>13 bits per character.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>14BITS</name>
         <description>14 bits per character.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>15BITS</name>
         <description>15 bits per character.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BUS_WIDTH</name>
       <description>SPI Data width.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Mono</name>
         <description>1 data pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Dual</name>
         <description>2 data pins.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Quad</name>
         <description>4 data pins.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>THREE_WIRE</name>
       <description>Three Wire mode. MOSI/MISO pin (s) shared. Only Mono mode suports Four-Wire.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>4wire</name>
         <description>Use four wire mode (Mono only).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>3wire</name>
         <description>Use three wire mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS_POL</name>
       <description>Slave Select Polarity, each Slave Select can have unique polarity.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SS0_high</name>
         <description>SS0 active high.</description>
         <value>0x1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS1_high</name>
         <description>SS1 active high.</description>
         <value>0x2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS2_high</name>
         <description>SS2 active high.</description>
         <value>0x4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS3_high</name>
         <description>SS3 active high.</description>
         <value>0x8</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SS_TIME</name>
     <description>Register for controlling SPI peripheral/Slave Select Timing.</description>
     <addressOffset>0x10</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>SSACT1</name>
       <description>Slave Select Pre delay 1.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between SS active and first serial clock edge.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSACT2</name>
       <description>Slave Select Post delay 2.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between last serial clock edge and SS inactive.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSINACT</name>
       <description>Slave Select Inactive delay.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between transactions.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CLK_CFG</name>
     <description>Register for controlling SPI clock rate.</description>
     <addressOffset>0x14</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>LO</name>
       <description>Low duty cycle control. In timer mode, reload[7:0].</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>HI</name>
       <description>High duty cycle control. In timer mode, reload[15:8].</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>SCALE</name>
       <description>System Clock scale factor. Scales the AMBA clock by 2^SCALE before generating serial clock.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DIV1</name>
         <description>Divide SPI Clock Frequency by 1.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV2</name>
         <description>Divide SPI Clock Frequency by 2.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV4</name>
         <description>Divide SPI Clock Frequency by 4.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV8</name>
         <description>Divide SPI Clock Frequency by 8.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV16</name>
         <description>Divide SPI Clock Frequency by 16.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV32</name>
         <description>Divide SPI Clock Frequency by 32.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV64</name>
         <description>Divide SPI Clock Frequency by 64.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV128</name>
         <description>Divide SPI Clock Frequency by 128.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV256</name>
         <description>Divide SPI Clock Frequency by 256.</description>
         <value>8</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA</name>
     <description>Register for controlling DMA.</description>
     <addressOffset>0x1C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_FIFO_LEVEL</name>
       <description>Transmit FIFO level that will trigger a DMA request, also level for threshold status. When TX FIFO has fewer than this many bytes, the associated events and conditions are triggered.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>TX_FIFO_EN</name>
       <description>Transmit FIFO enabled for SPI transactions.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Transmit FIFO is not enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Transmit FIFO is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_CLEAR</name>
       <description>Clear TX FIFO, clear is accomplished by resetting the read and write pointers. This should be done when FIFO is not being accessed on the SPI side.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLEAR</name>
         <description>Clear the Transmit FIFO, clears any pending TX FIFO status.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_CNT</name>
       <description>Count of entries in TX FIFO.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>6</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TX_DMA_EN</name>
       <description>TX DMA Enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>TX DMA requests are disabled, andy pending DMA requests are cleared.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>TX DMA requests are enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_LEVEL</name>
       <description>Receive FIFO level that will trigger a DMA request, also level for threshold status. When RX FIFO has more than this many bytes, the associated events and conditions are triggered.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>RX_FIFO_EN</name>
       <description>Receive FIFO enabled for SPI transactions.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Receive FIFO is not enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Receive FIFO is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_CLEAR</name>
       <description>Clear RX FIFO, clear is accomplished by resetting the read and write pointers. This should be done when FIFO is not being accessed on the SPI side.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLEAR</name>
         <description>Clear the Receive FIFO, clears any pending RX FIFO status.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_CNT</name>
       <description>Count of entries in RX FIFO.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>6</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RX_DMA_EN</name>
       <description>RX DMA Enable.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>RX DMA requests are disabled, any pending DMA requests are cleared.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>RX DMA requests are enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_FL</name>
     <description>Register for reading and clearing interrupt flags. All bits are write 1 to clear.</description>
     <addressOffset>0x20</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_LEVEL</name>
       <description>TX FIFO Threshold Crossed.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>TX FIFO Empty.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_LEVEL</name>
       <description>RX FIFO Threshold Crossed.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>RX FIFO FULL.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSA</name>
       <description>Slave Select Asserted.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSD</name>
       <description>Slave Select Deasserted.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FAULT</name>
       <description>Multi-Master Mode Fault.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ABORT</name>
       <description>Slave Abort Detected.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>M_DONE</name>
       <description>Master Done, set when SPI Master has completed any transactions.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_OVR</name>
       <description>Transmit FIFO Overrun, set when the AMBA side attempts to write data to a full transmit FIFO.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_UND</name>
       <description>Transmit FIFO Underrun, set when the SPI side attempts to read data from an empty transmit FIFO.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_OVR</name>
       <description>Receive FIFO Overrun, set when the SPI side attempts to write to a full receive FIFO.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_UND</name>
       <description>Receive FIFO Underrun, set when the AMBA side attempts to read data from an empty receive FIFO.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>Register for enabling interrupts.</description>
     <addressOffset>0x24</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_LEVEL</name>
       <description>TX FIFO Threshold interrupt enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>TX FIFO Empty interrupt enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_LEVEL</name>
       <description>RX FIFO Threshold Crossed interrupt enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>RX FIFO FULL interrupt enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSA</name>
       <description>Slave Select Asserted interrupt enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSD</name>
       <description>Slave Select Deasserted interrupt enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FAULT</name>
       <description>Multi-Master Mode Fault interrupt enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ABORT</name>
       <description>Slave Abort Detected interrupt enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>M_DONE</name>
       <description>Master Done interrupt enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_OVR</name>
       <description>Transmit FIFO Overrun interrupt enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_UND</name>
       <description>Transmit FIFO Underrun interrupt enable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_OVR</name>
       <description>Receive FIFO Overrun interrupt enable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_UND</name>
       <description>Receive FIFO Underrun interrupt enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_FL</name>
     <description>Register for wake up flags. All bits in this register are write 1 to clear.</description>
     <addressOffset>0x28</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_LEVEL</name>
       <description>Wake on TX FIFO Threshold Crossed.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>Wake on TX FIFO Empty.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_LEVEL</name>
       <description>Wake on RX FIFO Threshold Crossed.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Wake on RX FIFO Full.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_EN</name>
     <description>Register for wake up enable.</description>
     <addressOffset>0x2C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_LEVEL</name>
       <description>Wake on TX FIFO Threshold Crossed Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>Wake on TX FIFO Empty Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_LEVEL</name>
       <description>Wake on RX FIFO Threshold Crossed Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Wake on RX FIFO Full Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>STAT</name>
     <description>SPI Status register.</description>
     <addressOffset>0x30</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>BUSY</name>
       <description>SPI active status. In Master mode, set when transaction starts, cleared when last bit of last character is acted upon and Slave Select de-assertion would occur. In Slave mode, set when Slave Select is asserted, cleared when Slave Select is de-asserted. Not used in Timer mode. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>notActive</name>
         <description>SPI not active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>active</name>
         <description>SPI active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SPI0 SPI peripheral.-->
  <peripheral>
   <name>USBHS</name>
   <description>USB 2.0 High-speed Controller.</description>
   <baseAddress>0x400B1000</baseAddress>
   <addressBlock>
    <offset>0</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>USB</name>
    <value>2</value>
   </interrupt>
   <registers>
    <register>
     <name>FADDR</name>
     <description>Function address register.</description>
     <addressOffset>0x00</addressOffset>
     <size>8</size>
     <resetMask>0x00</resetMask>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Function address for this controller.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>7</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>UPDATE</name>
       <description>Set when ADDR is written, cleared when new address takes effect.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>POWER</name>
     <description>Power management register.</description>
     <addressOffset>0x01</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>EN_SUSPENDM</name>
       <description>Enable SUSPENDM signal.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SUSPEND</name>
       <description>Suspend mode detected.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RESUME</name>
       <description>Generate resume signaling.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RESET</name>
       <description>Bus reset detected.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>HS_MODE</name>
       <description>High-speed mode detected.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>HS_ENABLE</name>
       <description>High-speed mode enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SOFTCONN</name>
       <description>Softconn.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>ISO_UPDATE</name>
       <description>Wait for SOF during Isochronous xfers.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTRIN</name>
     <description>Interrupt register for EP0 and IN EP1-15.</description>
     <addressOffset>0x02</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>EP15_IN_INT</name>
       <description>Endpoint 15 interrupt.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP14_IN_INT</name>
       <description>Endpoint 14 interrupt.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP13_IN_INT</name>
       <description>Endpoint 13 interrupt.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP12_IN_INT</name>
       <description>Endpoint 12 interrupt.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP11_IN_INT</name>
       <description>Endpoint 11 interrupt.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP10_IN_INT</name>
       <description>Endpoint 10 interrupt.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP9_IN_INT</name>
       <description>Endpoint 9 interrupt.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP8_IN_INT</name>
       <description>Endpoint 8 interrupt.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP7_IN_INT</name>
       <description>Endpoint 7 interrupt.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP6_IN_INT</name>
       <description>Endpoint 6 interrupt.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP5_IN_INT</name>
       <description>Endpoint 5 interrupt.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP4_IN_INT</name>
       <description>Endpoint 4 interrupt.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP3_IN_INT</name>
       <description>Endpoint 3 interrupt.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP2_IN_INT</name>
       <description>Endpoint 2 interrupt.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP1_IN_INT</name>
       <description>Endpoint 1 interrupt.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP0_IN_INT</name>
       <description>Endpoint 0 interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTROUT</name>
     <description>Interrupt register for OUT EP 1-15.</description>
     <addressOffset>0x04</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>EP15_OUT_INT</name>
       <description>Endpoint 15 interrupt.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP14_OUT_INT</name>
       <description>Endpoint 14 interrupt.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP13_OUT_INT</name>
       <description>Endpoint 13 interrupt.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP12_OUT_INT</name>
       <description>Endpoint 12 interrupt.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP11_OUT_INT</name>
       <description>Endpoint 11 interrupt.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP10_OUT_INT</name>
       <description>Endpoint 10 interrupt.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP9_OUT_INT</name>
       <description>Endpoint 9 interrupt.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP8_OUT_INT</name>
       <description>Endpoint 8 interrupt.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP7_OUT_INT</name>
       <description>Endpoint 7 interrupt.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP6_OUT_INT</name>
       <description>Endpoint 6 interrupt.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP5_OUT_INT</name>
       <description>Endpoint 5 interrupt.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP4_OUT_INT</name>
       <description>Endpoint 4 interrupt.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP3_OUT_INT</name>
       <description>Endpoint 3 interrupt.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP2_OUT_INT</name>
       <description>Endpoint 2 interrupt.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP1_OUT_INT</name>
       <description>Endpoint 1 interrupt.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTRINEN</name>
     <description>Interrupt enable for EP 0 and IN EP 1-15.</description>
     <addressOffset>0x06</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>EP15_IN_INT_EN</name>
       <description>Endpoint 15 interrupt enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP14_IN_INT_EN</name>
       <description>Endpoint 14 interrupt enable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP13_IN_INT_EN</name>
       <description>Endpoint 13 interrupt enable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP12_IN_INT_EN</name>
       <description>Endpoint 12 interrupt enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP11_IN_INT_EN</name>
       <description>Endpoint 11 interrupt enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP10_IN_INT_EN</name>
       <description>Endpoint 10 interrupt enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP9_IN_INT_EN</name>
       <description>Endpoint 9 interrupt enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP8_IN_INT_EN</name>
       <description>Endpoint 8 interrupt enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP7_IN_INT_EN</name>
       <description>Endpoint 7 interrupt enable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP6_IN_INT_EN</name>
       <description>Endpoint 6 interrupt enable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP5_IN_INT_EN</name>
       <description>Endpoint 5 interrupt enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP4_IN_INT_EN</name>
       <description>Endpoint 4 interrupt enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP3_IN_INT_EN</name>
       <description>Endpoint 3 interrupt enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP2_IN_INT_EN</name>
       <description>Endpoint 2 interrupt enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP1_IN_INT_EN</name>
       <description>Endpoint 1 interrupt enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP0_INT_EN</name>
       <description>Endpoint 0 interrupt enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTROUTEN</name>
     <description>Interrupt enable for OUT EP 1-15.</description>
     <addressOffset>0x08</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>EP15_OUT_INT_EN</name>
       <description>Endpoint 15 interrupt.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP14_OUT_INT_EN</name>
       <description>Endpoint 14 interrupt.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP13_OUT_INT_EN</name>
       <description>Endpoint 13 interrupt.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP12_OUT_INT_EN</name>
       <description>Endpoint 12 interrupt.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP11_OUT_INT_EN</name>
       <description>Endpoint 11 interrupt.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP10_OUT_INT_EN</name>
       <description>Endpoint 10 interrupt.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP9_OUT_INT_EN</name>
       <description>Endpoint 9 interrupt.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP8_OUT_INT_EN</name>
       <description>Endpoint 8 interrupt.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP7_OUT_INT_EN</name>
       <description>Endpoint 7 interrupt.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP6_OUT_INT_EN</name>
       <description>Endpoint 6 interrupt.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP5_OUT_INT_EN</name>
       <description>Endpoint 5 interrupt.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP4_OUT_INT_EN</name>
       <description>Endpoint 4 interrupt.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP3_OUT_INT_EN</name>
       <description>Endpoint 3 interrupt.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP2_OUT_INT_EN</name>
       <description>Endpoint 2 interrupt.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP1_OUT_INT_EN</name>
       <description>Endpoint 1 interrupt.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTRUSB</name>
     <description>Interrupt register for common USB interrupts.</description>
     <addressOffset>0x0A</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>SOF_INT</name>
       <description>Start of Frame.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RESET_INT</name>
       <description>Bus reset detected.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RESUME_INT</name>
       <description>Resume detected.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>SUSPEND_INT</name>
       <description>Suspend detected.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTRUSBEN</name>
     <description>Interrupt enable for common USB interrupts.</description>
     <addressOffset>0x0B</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>SOF_INT_EN</name>
       <description>Start of Frame.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RESET_INT_EN</name>
       <description>Bus reset detected.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RESUME_INT_EN</name>
       <description>Resume detected.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SUSPEND_INT_EN</name>
       <description>Suspend detected.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>FRAME</name>
     <description>Frame number.</description>
     <addressOffset>0x0C</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>FRAMENUM</name>
       <description>Read the last received frame number, that is the 11-bit frame number received in the SOF packet.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>11</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INDEX</name>
     <description>Index for banked registers.</description>
     <addressOffset>0x0E</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>INDEX</name>
       <description>Index Register Access Selector. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>TESTMODE</name>
     <description>USB 2.0 test mode enable register.</description>
     <addressOffset>0x0F</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>FORCE_FS</name>
       <description>Force USB to Full-speed after reset.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FORCE_HS</name>
       <description>Force USB to High-speed after reset.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TEST_PKT</name>
       <description>Transmit fixed test packet.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TEST_K</name>
       <description>Force USB to continuous K state.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TEST_J</name>
       <description>Force USB to continuous J state.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TEST_SE0_NAK</name>
       <description>Respond to any valid IN token with NAK.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INMAXP</name>
     <description>Maximum packet size for INx endpoint (x == INDEX).</description>
     <addressOffset>0x10</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>MAXPACKETSIZE</name>
       <description>Maximum Packet Size in a Single Transaction. That is the maximum packet size in bytes, that is transmitted for each microframe. The maximum value is 1024, subject to the limitations of the endpoint type set in USB 2.0 Specification, Chapter 9</description>
       <bitOffset>0</bitOffset>
       <bitWidth>11</bitWidth>
      </field>
      <field>
       <name>NUMPACKMINUS1</name>
       <description>Number of Split Packets - 1. Defines the maximum number of packets minus 1 that a USB payload can be split into. THis must be an exact multiple of maxpacketsize. Only applicable for HS High-Bandwidth isochronous endpoints and Bulk endpoints. Ignored in all other cases. </description>
       <bitOffset>11</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CSR0</name>
     <description>Control status register for EP 0 (when INDEX == 0).</description>
     <addressOffset>0x12</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>SERV_SETUP_END</name>
       <description>Clear EP0 Setup End Bit. Write a 1 to clear the setupend bit. Automatically cleared after being set </description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SERV_OUTPKTRDY</name>
       <description>Clear EP0 Out Packet Ready Bit. Write a 1 to clear the outpktrdy bit. Automatically cleared after being set.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SEND_STALL</name>
       <description>Send EP0 STALL Handshake. Write a 1 to this bit to terminate the current control transaction by sneding a STALL handshake. Automatically cleared after being set. </description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SETUP_END</name>
       <description>Read Setup End Status. Automatically set when a contorl transaction ends before the dataend bit has been set by fimrware. An interrupt is generated when this bit is set. Write 1 to servicedsetupend to clear.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DATA_END</name>
       <description>Control Transaction Data End. Write a 1 to this bit after firmware completes any of the following three transactions: 1. set inpktrdy = 1 for the last data packet. 2. Set inpktrdy =1 for a zero-length data packet. 3. Clear outpktrdy = 0 after unloading the last data packet. </description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SENT_STALL</name>
       <description> Read EP0 STALL Handshake Sent Status Automatically set when a STALL handshake is transmitted. Write a 0 to clear. </description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>INPKTRDY</name>
       <description>EP0 IN Packet Ready 1: Write a 1 after writing a data packet to the IN FIFO. Automatically cleared when the data packet is transmitted. An interrupt is generated when this bit is cleared. </description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>OUTPKTRDY</name>
       <description>EP0 OUT Packet Ready Status Automatically set when a data packet is received in the OUT FIFO. An interrupt is generated when this bit is set. Write a 1 to the servicedoutpktrdy bit (above) to clear after the packet is unloaded from the OUT FIFO. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INCSRL</name>
     <description>Control status lower register for INx endpoint (x == INDEX).</description>
     <alternateRegister>CSR0</alternateRegister>
     <addressOffset>0x12</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>INCOMPTX</name>
       <description>Read Incomplete Split Transfer Error Status High-bandwidth isochronous transfers: Automatically set when a payload is split into multiple packets but insufficient IN tokens were received to send all packets. The current packets is flushed from the IN FIFO. Write 0 to clear.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>CLRDATATOG</name>
       <description>Write 1 to clear IN endpoint data-toggle to 0.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SENTSTALL</name>
       <description>Read STALL Handshake Sent Status Automatically set when a STALL handshake is transmitted, at which time the IN FIFO is flushed, and inpktrdy is cleared. Write 0 to clear.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SENDSTALL</name>
       <description>Send STALL Handshake.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>terminate</name>
         <description>Terminate STALL handhsake</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>respond</name>
         <description>Respond to an IN token with a STALL handshake</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FLUSHFIFO</name>
       <description>Flush Next Packet from IN FIFO. Write 1 to clear</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>UNDERRUN</name>
       <description>Read IN FIFO Underrun Error Status Isochronous Mode: Automatically set if the IN FIFO is empty. Write 0 to clear</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FIFONOTEMPTY</name>
       <description>Read FIFO Not Empty Status. Automatically set when there is at least one packet in the IN FIFO. Write a 0 to clear. </description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>INPKTRDY</name>
       <description>IN Packet Ready. Write a 1 to clear </description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INCSRU</name>
     <description>Control status upper register for INx endpoint (x == INDEX).</description>
     <addressOffset>0x13</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>AUTOSET</name>
       <description>Auto Set inpktrdy. </description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>set</name>
         <description>USBHS_INCSRL_inpktrdy must be set by firmware.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>auto</name>
         <description>USBHS_INCSRL_inpktrdy is automatically set. </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ISO</name>
       <description>Isochronous Transfer Enable</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>interrupt</name>
         <description>Enable IN Bulk and IN interrupt transfers.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>isochronous</name>
         <description>Enable IN Isochronous transfers. </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MODE</name>
       <description> Endpoint Direction Mode.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>out</name>
         <description>Endpoint direction is OUT.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>in</name>
         <description>Endpoint direction is IN. </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DMAREQEN</name>
       <description> DMA Request Enable </description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable DMA for this IN endpoint.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable DMA for this IN endpoint.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FRCDATATOG</name>
       <description> Force In Data - Toggle</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>received</name>
         <description>Toggle data-toglge only when an ACK is received.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dontcare</name>
         <description>Toggle data-toggle regardless of ACK. </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DMAREQMODE</name>
       <description> DMA Request Mode Enable </description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>0</name>
         <description>Enable DMA Request Mode 0.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1</name>
         <description>Enable DMA Request Mode 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DPKTBUFDIS</name>
       <description> Double Packet Buffering Disable </description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable Double packet buffering.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable Double Packet Buffering.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUTMAXP</name>
     <description>Maximum packet size for OUTx endpoint (x == INDEX).</description>
     <addressOffset>0x14</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>NUMPACKMINUS1</name>
       <description>Number of Split Packets -1. Defines the maximum number of packets - 1 that a usb payload is combined into. The value must be exact multiple of maxpacketsize. </description>
       <bitOffset>11</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>MAXPACKETSIZE</name>
       <description>Maximum Packet in a Single Transaction. This is the maximum packet size, in bytes, that is transmitted for each microframe. The maximum value is 1024, subject to the limitations for the endpoint type set in USB2.0 spesification, chapter 9.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>11</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>OUTCSRL</name>
     <description>Control status lower register for OUTx endpoint (x == INDEX).</description>
     <addressOffset>0x16</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>CLRDATATOG</name>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SENTSTALL</name>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SENDSTALL</name>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FLUSHFIFO</name>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>DATAERROR</name>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>OVERRUN</name>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FIFOFULL</name>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>OUTPKTRDY</name>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>OUTCSRU</name>
     <description>Control status upper register for OUTx endpoint (x == INDEX).</description>
     <addressOffset>0x17</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>AUTOCLEAR</name>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>ISO</name>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>DMAREQEN</name>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>DISNYET</name>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>DMAREQMODE</name>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>DPKTBUFDIS</name>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>INCOMPRX</name>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>COUNT0</name>
     <description>Number of received bytes in EP 0 FIFO (INDEX == 0).</description>
     <addressOffset>0x18</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>COUNT0</name>
       <description>Read Number of Data Bytes in the Endpoint 0 FIFO. Returns the number of data bytes in the endpoint 0 FIFO. This value changes as contents of the FIFO change. The value is only valued when USBHS_OUTSCRL_outpktrdy = 1 </description>
       <bitOffset>0</bitOffset>
       <bitWidth>7</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>OUTCOUNT</name>
     <description>Number of received bytes in OUT EPx FIFO (x == INDEX).</description>
     <alternateRegister>COUNT0</alternateRegister>
     <addressOffset>0x18</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>OUTCOUNT</name>
       <description>Read Number of Data Bytes in OUT FIFO. Returns the number of data bytes in the packet that are read next in the OUT FIFO. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>13</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO0</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x20</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO0</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO1</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO1</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO2</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO2</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO3</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x2c</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO3</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO4</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO4</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO5</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x34</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO5</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO6</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x38</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO6</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO7</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x3c</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO7</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO8</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x40</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO8</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO9</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x44</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO9</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO10</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO10</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO11</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x4c</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO11</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO12</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x50</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO12</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO13</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x54</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO13</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO14</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x58</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO14</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO15</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x5c</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO15</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>HWVERS</name>
     <description>HWVERS</description>
     <addressOffset>0x6c</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>USBHS_HWVERS</name>
       <description>USBHS Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EPINFO</name>
     <description>Endpoint hardware information.</description>
     <addressOffset>0x78</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>OUTENDPOINTS</name>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>INTENDPOINTS</name>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>RAMINFO</name>
     <description>RAM width and DMA hardware information.</description>
     <addressOffset>0x79</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>DMACHANS</name>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RAMBITS</name>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SOFTRESET</name>
     <description>Software reset register.</description>
     <addressOffset>0x7A</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>RSTXS</name>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RSTS</name>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>EARLYDMA</name>
     <description>DMA timing control register.</description>
     <addressOffset>0x7B</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>EDMAIN</name>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EDMAOUT</name>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>CTUCH</name>
     <description>Chirp timeout timer setting.</description>
     <addressOffset>0x80</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>C_T_UCH</name>
       <description>HS Chirp Timeout Clock Cycles. This configures the chirp timeout used by this device to negotiate a HS connection with a FS Host. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTHSRTN</name>
     <description>Sets delay between HS resume to UTM normal operating mode.</description>
     <addressOffset>0x82</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>C_T_HSTRN</name>
       <description>High Speed Resume Delay Clock Cycles. This configures the delay from when the RESUME state on the bus ends, the when the USBHS resumes normal operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MXM_USB_REG_00</name>
     <description>MXM_USB_REG_00</description>
     <addressOffset>0x400</addressOffset>
    </register>
    <register>
     <name>M31_PHY_UTMI_RESET</name>
     <description>M31_PHY_UTMI_RESET</description>
     <addressOffset>0x404</addressOffset>
    </register>
    <register>
     <name>M31_PHY_UTMI_VCONTROL</name>
     <description>M31_PHY_UTMI_VCONTROL</description>
     <addressOffset>0x408</addressOffset>
    </register>
    <register>
     <name>M31_PHY_CLK_EN</name>
     <description>M31_PHY_CLK_EN</description>
     <addressOffset>0x40C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_PONRST</name>
     <description>M31_PHY_PONRST</description>
     <addressOffset>0x410</addressOffset>
    </register>
    <register>
     <name>M31_PHY_NONCRY_RSTB</name>
     <description>M31_PHY_NONCRY_RSTB</description>
     <addressOffset>0x414</addressOffset>
    </register>
    <register>
     <name>M31_PHY_NONCRY_EN</name>
     <description>M31_PHY_NONCRY_EN</description>
     <addressOffset>0x418</addressOffset>
    </register>
    <register>
     <name>M31_PHY_U2_COMPLIANCE_EN</name>
     <description>M31_PHY_U2_COMPLIANCE_EN</description>
     <addressOffset>0x420</addressOffset>
    </register>
    <register>
     <name>M31_PHY_U2_COMPLIANCE_DAC_ADJ</name>
     <description>M31_PHY_U2_COMPLIANCE_DAC_ADJ</description>
     <addressOffset>0x424</addressOffset>
    </register>
    <register>
     <name>M31_PHY_U2_COMPLIANCE_DAC_ADJ_EN</name>
     <description>M31_PHY_U2_COMPLIANCE_DAC_ADJ_EN</description>
     <addressOffset>0x428</addressOffset>
    </register>
    <register>
     <name>M31_PHY_CLK_RDY</name>
     <description>M31_PHY_CLK_RDY</description>
     <addressOffset>0x42C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_PLL_EN</name>
     <description>M31_PHY_PLL_EN</description>
     <addressOffset>0x430</addressOffset>
    </register>
    <register>
     <name>M31_PHY_BIST_OK</name>
     <description>M31_PHY_BIST_OK</description>
     <addressOffset>0x434</addressOffset>
    </register>
    <register>
     <name>M31_PHY_DATA_OE</name>
     <description>M31_PHY_DATA_OE</description>
     <addressOffset>0x438</addressOffset>
    </register>
    <register>
     <name>M31_PHY_OSCOUTEN</name>
     <description>M31_PHY_OSCOUTEN</description>
     <addressOffset>0x43C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_LPM_ALIVE</name>
     <description>M31_PHY_LPM_ALIVE</description>
     <addressOffset>0x440</addressOffset>
    </register>
    <register>
     <name>M31_PHY_HS_BIST_MODE</name>
     <description>M31_PHY_HS_BIST_MODE</description>
     <addressOffset>0x444</addressOffset>
    </register>
    <register>
     <name>M31_PHY_CORECLKIN</name>
     <description>M31_PHY_CORECLKIN</description>
     <addressOffset>0x448</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XTLSEL</name>
     <description>M31_PHY_XTLSEL</description>
     <addressOffset>0x44C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_LS_EN</name>
     <description>M31_PHY_LS_EN</description>
     <addressOffset>0x450</addressOffset>
    </register>
    <register>
     <name>M31_PHY_DEBUG_SEL</name>
     <description>M31_PHY_DEBUG_SEL</description>
     <addressOffset>0x454</addressOffset>
    </register>
    <register>
     <name>M31_PHY_DEBUG_OUT</name>
     <description>M31_PHY_DEBUG_OUT</description>
     <addressOffset>0x458</addressOffset>
    </register>
    <register>
     <name>M31_PHY_OUTCLKSEL</name>
     <description>M31_PHY_OUTCLKSEL</description>
     <addressOffset>0x45C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_31_0</name>
     <description>M31_PHY_XCFGI_31_0</description>
     <addressOffset>0x460</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_63_32</name>
     <description>M31_PHY_XCFGI_63_32</description>
     <addressOffset>0x464</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_95_64</name>
     <description>M31_PHY_XCFGI_95_64</description>
     <addressOffset>0x468</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_127_96</name>
     <description>M31_PHY_XCFGI_127_96</description>
     <addressOffset>0x46C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_137_128</name>
     <description>M31_PHY_XCFGI_137_128</description>
     <addressOffset>0x470</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_HS_COURSE_TUNE_NUM</name>
     <description>M31_PHY_XCFGI_HS_COURSE_TUNE_NUM</description>
     <addressOffset>0x474</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_HS_FINE_TUNE_NUM</name>
     <description>M31_PHY_XCFGI_HS_FINE_TUNE_NUM</description>
     <addressOffset>0x478</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_FS_COURSE_TUNE_NUM</name>
     <description>M31_PHY_XCFGI_FS_COURSE_TUNE_NUM</description>
     <addressOffset>0x47C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_FS_FINE_TUNE_NUM</name>
     <description>M31_PHY_XCFGI_FS_FINE_TUNE_NUM</description>
     <addressOffset>0x480</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_LOCK_RANGE_MAX</name>
     <description>M31_PHY_XCFGI_LOCK_RANGE_MAX</description>
     <addressOffset>0x484</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_LOCK_RANGE_MIN</name>
     <description>M31_PHY_XCFGI_LOCK_RANGE_MIN</description>
     <addressOffset>0x488</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_OB_RSEL</name>
     <description>M31_PHY_XCFGI_OB_RSEL</description>
     <addressOffset>0x48C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_OC_RSEL</name>
     <description>M31_PHY_XCFGI_OC_RSEL</description>
     <addressOffset>0x490</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGO</name>
     <description>M31_PHY_XCFGO</description>
     <addressOffset>0x494</addressOffset>
    </register>
    <register>
     <name>MXM_INT</name>
     <description>USB Added Maxim Interrupt Flag Register.</description>
     <addressOffset>0x498</addressOffset>
     <fields>
      <field>
       <name>VBUS</name>
       <description>VBUS</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOVBUS</name>
       <description>NOVBUS</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MXM_INT_EN</name>
     <description>USB Added Maxim Interrupt Enable Register.</description>
     <addressOffset>0x49C</addressOffset>
     <fields>
      <field>
       <name>VBUS</name>
       <description>VBUS</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOVBUS</name>
       <description>NOVBUS</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MXM_SUSPEND</name>
     <description>USB Added Maxim Suspend Register.</description>
     <addressOffset>0x4A0</addressOffset>
     <fields>
      <field>
       <name>SEL</name>
       <description>Suspend register</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MXM_REG_A4</name>
     <description>USB Added Maxim Power Status Register</description>
     <addressOffset>0x4A4</addressOffset>
     <fields>
      <field>
       <name>VRST_VDDB_N_A</name>
       <description>VRST_VDDB_N_A</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DMA_INT</name>
       <description>DMA_INT</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--USBHS USB 2.0 High-speed Controller.-->
  <peripheral>
   <name>WDT0</name>
   <description>Watchdog Timer 0</description>
   <baseAddress>0x40003000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x0400</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>WDT0</name>
    <value>1</value>
   </interrupt>
   <registers>
    <register>
     <name>CTRL</name>
     <description>Watchdog Timer Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <resetMask>0x7FFFF000</resetMask>
     <fields>
      <field>
       <name>INT_PERIOD</name>
       <description>Watchdog Interrupt Period. The watchdog timer will assert an interrupt, if enabled, if the CPU does not write the watchdog reset sequence to the WDT_RST register before the watchdog timer has counted this time period since the last timer reset.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>wdt2pow31</name>
         <description>2**31 clock cycles.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow30</name>
         <description>2**30 clock cycles.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow29</name>
         <description>2**29 clock cycles.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow28</name>
         <description>2**28 clock cycles.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow27</name>
         <description>2^27 clock cycles.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow26</name>
         <description>2**26 clock cycles.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow25</name>
         <description>2**25 clock cycles.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow24</name>
         <description>2**24 clock cycles.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow23</name>
         <description>2**23 clock cycles.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow22</name>
         <description>2**22 clock cycles.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow21</name>
         <description>2**21 clock cycles.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow20</name>
         <description>2**20 clock cycles.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow19</name>
         <description>2**19 clock cycles.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow18</name>
         <description>2**18 clock cycles.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow17</name>
         <description>2**17 clock cycles.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow16</name>
         <description>2**16 clock cycles.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RST_PERIOD</name>
       <description>Watchdog Reset Period. The watchdog timer will assert a reset, if enabled, if the CPU does not write the watchdog reset sequence to the WDT_RST register before the watchdog timer has counted this time period since the last timer reset.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>wdt2pow31</name>
         <description>2**31 clock cycles.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow30</name>
         <description>2**30 clock cycles.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow29</name>
         <description>2**29 clock cycles.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow28</name>
         <description>2**28 clock cycles.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow27</name>
         <description>2^27 clock cycles.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow26</name>
         <description>2**26 clock cycles.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow25</name>
         <description>2**25 clock cycles.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow24</name>
         <description>2**24 clock cycles.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow23</name>
         <description>2**23 clock cycles.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow22</name>
         <description>2**22 clock cycles.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow21</name>
         <description>2**21 clock cycles.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow20</name>
         <description>2**20 clock cycles.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow19</name>
         <description>2**19 clock cycles.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow18</name>
         <description>2**18 clock cycles.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow17</name>
         <description>2**17 clock cycles.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow16</name>
         <description>2**16 clock cycles.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WDT_EN</name>
       <description>Watchdog Timer Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INT_FLAG</name>
       <description>Watchdog Timer Interrupt Flag.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INT_EN</name>
       <description>Watchdog Timer Interrupt Enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RST_EN</name>
       <description>Watchdog Timer Reset Enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RST_FLAG</name>
       <description>Watchdog Timer Reset Flag.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <usage>read-write</usage>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>RST</name>
     <description>Watchdog Timer Reset Register.</description>
     <addressOffset>0x04</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>WDT_RST</name>
       <description>Writing the watchdog counter 'reset sequence' to this register resets the watchdog counter. If the watchdog count exceeds INT_PERIOD then a watchdog interrupt will occur, if enabled. If the watchdog count exceeds RST_PERIOD then a watchdog reset will occur, if enabled.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>seq0</name>
         <description>The first value to be written to reset the WDT.</description>
         <value>0x000000A5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>seq1</name>
         <description>The second value to be written to reset the WDT.</description>
         <value>0x0000005A</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--WDT0 Watchdog Timer 0-->
  <peripheral derivedFrom="WDT0">
   <name>WDT1</name>
   <description>Watchdog Timer 0 1</description>
   <baseAddress>0x40003400</baseAddress>
   <interrupt>
    <name>WDT1</name>
    <description>WDT1 IRQ</description>
    <value>57</value>
   </interrupt>
  </peripheral>
<!--WDT1 Watchdog Timer 0 1-->
 </peripherals>
</device>
